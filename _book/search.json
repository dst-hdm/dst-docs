[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Template",
    "section": "",
    "text": "1 Welcome to My Quarto Book\nThis is the home page of my Quarto book. You can customize the content here."
  },
  {
    "objectID": "Ideenfindung.html#fragestellung-erarbeiten",
    "href": "Ideenfindung.html#fragestellung-erarbeiten",
    "title": "1  Themidee finden",
    "section": "1.1 Fragestellung erarbeiten:",
    "text": "1.1 Fragestellung erarbeiten:\nWir entschieden uns, uns mit einem Thema auseinanderzusetzen, das nicht nur unser persönliches Interesse weckt, sondern auch direkte Auswirkungen auf unser Leben hat. Infolgedessen rückte der Klimawandel und seine Einflüsse auf Naturkatastrophen in den Mittelpunkt unserer Aufmerksamkeit. Daher war es für uns selbstverständlich, die Auswirkungen des Klimawandels auf die Häufigkeit der Naturkatastrophen anhand unserer Daten darzustellen."
  },
  {
    "objectID": "Ideenfindung.html#erarbeitung-big-idea-worksheet",
    "href": "Ideenfindung.html#erarbeitung-big-idea-worksheet",
    "title": "1  Themidee finden",
    "section": "1.2 Erarbeitung Big Idea Worksheet:",
    "text": "1.2 Erarbeitung Big Idea Worksheet:\nNachdem unsere erste Fragestellung im Raum stand, befassten wir uns mit der Erstellung des Big Ideas Worksheets. Bei der Erstellung des Big Idea Worksheets stießen wir auf eine Herausforderung, insbesondere bei der genauen Bestimmung unserer Zielgruppe für das gewählte Thema. Aufgrund der Tatsache, dass der Klimawandel jeden Einzelnen betrifft, fiel es uns schwer, die Hörerschaft präzise zu definieren. Nichtsdestotrotz haben wir uns darauf verständigt, uns auf die Zielgruppe zu konzentrieren, die den größten Beitrag leisten kann oder das größte Interesse an unserer Visualisierung zeigt – insbesondere die Bereiche Politik und Wissenschaft.\nEine weitere Schwierigkeit bestand in der Beschaffung von Daten, da die Dokumentation von Naturkatastrophen, insbesondere in der Vergangenheit, oft unzureichend ist."
  },
  {
    "objectID": "Ideenfindung.html#datensatz-beschaffung",
    "href": "Ideenfindung.html#datensatz-beschaffung",
    "title": "1  Themidee finden",
    "section": "1.3 Datensatz Beschaffung:",
    "text": "1.3 Datensatz Beschaffung:\nWir haben verschiedene Datenbanken durchsucht, um geeignete Daten für unsere Analyse zu finden. Unsere Auswahlkriterien umfassten den Zeitraum von 1920 bis mindestens 2010, verschiedene Kategorien von Naturkatastrophen, die Vertrauenswürdigkeit der Datenquellen und eine moderate Anzahl von fehlenden Werten bei den Temperaturdaten. In diesem Zusammenhang haben wir uns für ein Kaggle-Datenset entschieden, das ursprünglich vom Lawrence Berkeley National Laboratory stammt, sowie einen selbst zusammengestellten Datensatz aus der Public EM-DAT Database.\nDie Entscheidung für diese beiden Datensätze erfolgte aufgrund ihrer Erfüllung unserer spezifischen Anforderungen. Die Beschränkung auf zwei Datensätze ergab sich, da wir während unserer Recherche nur wenige Sets gefunden haben, die unseren Kriterien entsprachen. Insbesondere stellten NaN-Werte in Bezug auf Katastrophen in den 1980er Jahren eine Herausforderung dar. Darüber hinaus waren weitere Datensätze nicht erforderlich, da dies zu einer Duplizierung der Informationen geführt hätte, und der Naturaldisaster-Datensatz bereits ausreichende Informationen enthielt.\nNachdem wir nun erfolgreich unsere Daten gefunden haben und unsere Big Idea Worksheets ausgerarbeitet haben, befassten wir uns mit dem Thema der Dataprepartion"
  },
  {
    "objectID": "DataPrep.html#data-preparation-für-temperatur",
    "href": "DataPrep.html#data-preparation-für-temperatur",
    "title": "2  Dataprep",
    "section": "2.2 Data Preparation für Temperatur:",
    "text": "2.2 Data Preparation für Temperatur:\nZu Beginn der Datenvorbereitung für den Datensatz wurde jedem Land eine eindeutige UID-Zelle zugewiesen und diese wurde befüllt. Anschließend wurde die Datenstruktur durch das Betrachten von Head und Tail überprüft, woraufhin die verbleibenden NaN-Werte entfernt wurden. Danach wurden die Datentypen betrachtet und angepasst. Hierbei erfolgte eine Änderung des Datetime-Formats und der Datentyp der Spalte “Country” wurde zu “Category” geändert. Anschließend wurde der DataFrame nach der Jahreszahl gefiltert und alle UID-Werte, die als “Unknown” gekennzeichnet waren, wurden entfernt. Nach dieser Aktion erfolgte die Verknüpfung mit den ISO-Ländercodes, wobei entsprechender Python-Code verwendet wurde. Anschließend wurden die Ländernamen an die Ländernamen des Datensatzes zu Naturkatastrophen angepasst. Zum Abschluss wurde eine CSV-Datei erstellt. Die verwendeten Bibliotheken waren Pandas und pycountry.\n\ndf_temp.head()\n\n\n\n\n\n\n\n\ndt\nAverageTemperature\nAverageTemperatureUncertainty\nuid\nISO\nCountry\n\n\n\n\n0\n1920-01-01\n1.385\n0.589\n4\nAFG\nAfghanistan\n\n\n1\n1920-02-01\n0.689\n0.742\n4\nAFG\nAfghanistan\n\n\n2\n1920-03-01\n7.944\n0.953\n4\nAFG\nAfghanistan\n\n\n3\n1920-04-01\n11.725\n0.849\n4\nAFG\nAfghanistan\n\n\n4\n1920-05-01\n17.695\n0.662\n4\nAFG\nAfghanistan"
  },
  {
    "objectID": "DataPrep.html",
    "href": "DataPrep.html",
    "title": "2  Dataprep",
    "section": "",
    "text": "Wir haben unsere beiden Datensätze unterschiedlich aufbereitet. Im Folgenden wird dies genauer erläutert.\n*** Dataprepartion Naturaldisaster: *** - Nach einer kurzen explorativen Datenanalyse, in der wir die Spalten und NaN-Werte betrachteten, starteten wir direkt mit der Datenvorbereitung für den Datensatz zu Naturkatastrophen. - Zuerst normalisierten wir die Länder mithilfe der Koordinaten und wandelten sie direkt in DataFrames um. - Anschließend entfernten wir bestimmte Spalten, darunter “External IDs”, “Event Name”, “OFDA Response”, “Declaration”, “AID Contribution (‘000 US$)“,”Magnitude”, “Magnitude Scale”, “River Basin”, “Admin Units”, “Entry Date”, “Last Update”. Diese Spalten waren entweder für unsere Visualisierung nicht relevant oder enthielten zu viele NaN-Werte, was ihre Aussagekraft beeinträchtigt hätte. - Nach diesem Schritt entfernten wir die verbleibenden NaN-Werte. - Anschließend erfolgte die Umwandlung der Datentypen, wobei entsprechender Python-Code verwendet wurde. - Der Code erstellte einen Pandas DataFrame namens empty_df, der alle möglichen Kombinationen von ’Country’, ‘Disaster Type’ und ‘Start Year’ enthielt. Dieser DataFrame wurde durch die Verwendung von MultiIndex erstellt, um die verschiedenen Dimensionen zu berücksichtigen. - Der Code gruppierte dann einen vorhandenen DataFrame (df_cleaned) nach den Spalten ‘Country’, ‘Disaster Type’, ‘Start Year’ und ‘ISO’, um die Häufigkeit von Katastrophen pro Land, Katastrophentyp und Startjahr zu zählen. Diese Informationen wurden in einem DataFrame namens df_nd_grouped gespeichert. Der leere DataFrame wurde dann mit diesen gruppierten Daten gemerged, um fehlende Werte mit 0 zu füllen. Schließlich erfolgte eine weitere Fusion mit einem DataFrame (df_coordinates), der Länderkoordinaten enthielt, um ein finales DataFrame namens merged_group zu erstellen. - Abschließend wurde der DataFrame als CSV-Datei gespeichert. - Die verwendeten Bibliotheken waren Pandas und NumPy. Zusätzlich wurde eine JSON-Datei für die Ländercodes importiert. → df head einügen\n\nimport pandas as pd\nimport altair as alt\nfrom vega_datasets import data\n\nalt.data_transformers.disable_max_rows()\n\ndf_nd = pd.read_csv('./data/InternationalDisaster_cleaned.csv')\ndf_nd_full = pd.read_csv('data/InternationalDisaster.csv')\ndf_nd_grouped = pd.read_csv('data/InternationalDisaster_grouped.csv')\ndf_temp = pd.read_csv('data/GlobalLandTemperatur_cleaned.csv')\ndf_temp_agg = pd.read_csv('data/GlobalLandTemperatur_aggregated.csv')\ndf_temp_nd_combined = pd.read_csv('data/df_temp_nd_combined.csv')\ncountries = alt.topo_feature(data.world_110m.url, 'countries')\n\nchart_title_color = \"#d6d6d6\"\nchart_line_color = \"#3A86FF\"\nchart_marker_color = \"#e00707\"\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\n\nnd_type_colors_red = {\n    'Extreme temperature': nd_type_colors['Extreme temperature'],\n    'Storm': nd_type_colors['Storm'],\n    'Flood': nd_type_colors['Flood']\n}\n\n\ndf_nd.head()\n\n\n\n\n\n\n\n\nDisNo.\nHistoric\nClassification Key\nDisaster Group\nDisaster Subgroup\nDisaster Type\nDisaster Subtype\nISO\nCountry\nSubregion\n...\nStart Year\nStart Month\nStart Day\nEnd Year\nEnd Month\nEnd Day\nTotal Deaths\nNo. Affected\nTotal Affected\nCPI\n\n\n\n\n0\n1920\nYes\nnat-bio-epi-bac\nNatural\nBiological\nEpidemic\nBacterial disease\nIND\nIndia\nSouthern Asia\n...\n1920\nNaN\nNaN\n1920\nNaN\nNaN\n2000000.0\nNaN\nNaN\n6.832935e+09\n\n\n1\n1920\nYes\nnat-bio-epi-bac\nNatural\nBiological\nEpidemic\nBacterial disease\nIND\nIndia\nSouthern Asia\n...\n1920\nNaN\nNaN\n1920\nNaN\nNaN\n500000.0\nNaN\nNaN\n6.832935e+09\n\n\n2\n1920\nYes\nnat-hyd-flo-flo\nNatural\nHydrological\nFlood\nFlood (General)\nDFR\nGermany\nWestern Europe\n...\n1920\n8.0\nNaN\n1920\n8.0\nNaN\nNaN\nNaN\nNaN\n6.832935e+09\n\n\n3\n1920\nYes\nnat-geo-ear-gro\nNatural\nGeophysical\nEarthquake\nGround movement\nCHN\nChina\nEastern Asia\n...\n1920\n12.0\n16.0\n1920\n12.0\n16.0\n180000.0\nNaN\nNaN\n6.832935e+09\n\n\n4\n1920\nYes\nnat-bio-epi-vir\nNatural\nBiological\nEpidemic\nViral disease\nAIA\nAnguilla\nLatin America and the Caribbean\n...\n1920\n1.0\nNaN\n1920\n1.0\nNaN\nNaN\nNaN\nNaN\n6.832935e+09\n\n\n\n\n5 rows × 23 columns\n\n\n\n*** Data Preparation für Temperatur: *** - Zu Beginn der Datenvorbereitung für den Datensatz wurde jedem Land eine eindeutige UID-Zelle zugewiesen und diese wurde befüllt. - Anschließend wurde die Datenstruktur durch das Betrachten von Head und Tail überprüft, woraufhin die verbleibenden NaN-Werte entfernt wurden. - Danach wurden die Datentypen betrachtet und angepasst. Hierbei erfolgte eine Änderung des Datetime-Formats und der Datentyp der Spalte “Country” wurde zu “Category” geändert. - Anschließend wurde der DataFrame nach der Jahreszahl gefiltert und alle UID-Werte, die als “Unknown” gekennzeichnet waren, wurden entfernt. - Nach dieser Aktion erfolgte die Verknüpfung mit den ISO-Ländercodes, wobei entsprechender Python-Code verwendet wurde. - Anschließend wurden die Ländernamen an die Ländernamen des Datensatzes zu Naturkatastrophen angepasst. - Zum Abschluss wurde eine CSV-Datei erstellt. - Die verwendeten Bibliotheken waren Pandas und pycountry.\n\ndf_temp.head()\n\n\n\n\n\n\n\n\ndt\nAverageTemperature\nAverageTemperatureUncertainty\nuid\nISO\nCountry\n\n\n\n\n0\n1920-01-01\n1.385\n0.589\n4\nAFG\nAfghanistan\n\n\n1\n1920-02-01\n0.689\n0.742\n4\nAFG\nAfghanistan\n\n\n2\n1920-03-01\n7.944\n0.953\n4\nAFG\nAfghanistan\n\n\n3\n1920-04-01\n11.725\n0.849\n4\nAFG\nAfghanistan\n\n\n4\n1920-05-01\n17.695\n0.662\n4\nAFG\nAfghanistan\n\n\n\n\n\n\n\n\n2.0.1 Deep dive into Data:\nUm ein umfassenderes Verständnis für unsere Daten zu entwickeln und die Aussagekraft unserer Ergebnisse zu verstärken, haben wir mithilfe von Altair zunächst grundlegende Diagramme erstellt. Dies diente dazu, eine tiefere Einsicht in unsere Daten zu gewinnen. Wir begannen mit der Entwicklung eines Diagramms, das den Temperaturverlauf von 1920 bis 2013 zeigt. Anschließend erstellten wir ein Diagramm mit der Anzahl der Naturkatastrophen von 1920 bis 2013. Zusätzlich wurden weitere Balkendiagramme entworfen, um das Verhältnis verschiedener Naturkatastrophen zu visualisieren. Obwohl dieser Prozess mitunter anspruchsvoll war, erwies er sich als äußerst hilfreich für die Fortschritte in unserem Projekt. Die erstellten Diagramme ermöglichten uns tiefe Einblicke in unsere Daten zu gewinnen.\n\n\n2.0.2 Temperaturverlauf & Katastrophen (Sturm, Hitze und Fluten ) 1920 bis 2013\n\nglobal_avg_temp = df_temp_agg.groupby(\n    'Year')['AverageTemperature'].mean().reset_index()\n\nglobal_avg_temp['Year'] = pd.to_datetime(\n    global_avg_temp['Year'], format='%Y')\nglobal_avg_temp['Year'] = global_avg_temp['Year'].dt.year\n\nglobal_avg_temp['AverageTemperature'] = global_avg_temp['AverageTemperature'].round(\n    2)\n\nglob_temp_chart = alt.Chart(global_avg_temp).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n        titleAnchor='start',\n        labelColor='white',\n    )),\n    y=alt.Y('AverageTemperature:Q', axis=alt.Axis(\n        title='Temperatur in °C',\n        titleAnchor='start',\n        labelColor='white',\n        titleColor='white',\n    ), scale=alt.Scale(\n        domain=[18, 21])),\n    tooltip=['Year', 'AverageTemperature']\n).properties(\n    width=950,\n    title={\n        \"text\": \"Globaler Temperaturverlauf (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\n\n\nglob_temp_regression = glob_temp_chart.transform_regression(\n    'Year', 'AverageTemperature', method='linear'\n).mark_line(color=chart_marker_color)\n\ntext_at_end = alt.Chart(pd.DataFrame({'end_position': [19.8]})).mark_text(\n    align='left',\n    baseline='middle',\n    dx=360,\n    dy=0,\n    color=chart_marker_color,\n    text='Anstieg: 0.8 °C',\n    fontWeight=800,\n    fontSize=14\n).encode(\n    y='end_position:Q'\n)\n\n\nglob_temp_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\n\ndf_nd_filtered = df_nd_grouped[(df_nd_grouped['Frequency'] &gt; 0) & ((\n    df_nd_grouped['Disaster Type'] == 'Flood') | (df_nd_grouped['Disaster Type'] == 'Storm') | (df_nd_grouped['Disaster Type'] == 'Extreme temperatur'))]\nglobal_disaster_freq = df_nd_filtered.groupby(\n    ['Start Year'])['Frequency'].sum().reset_index()\n\nnd_line_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Start Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n        labelColor='white',\n    )),\n    y=alt.Y('Frequency:Q').axis(\n        title='Häufigkeit',\n        titleAnchor='start',\n        labelColor='white',\n        titleColor='white'\n    ),\n).properties(\n    width=950,\n    height=290,\n    title={\n        \"text\": \"Weltweite Häufigkeit pro Jahr: Stürmen, Extremtemperaturen und Überschwemmungen (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\nnd_line_chart.configure(background=\"rgba(0, 0, 0, 0)\")"
  },
  {
    "objectID": "DataPrep.html#dataprepartion-naturaldisaster",
    "href": "DataPrep.html#dataprepartion-naturaldisaster",
    "title": "2  Dataprep",
    "section": "2.1 Dataprepartion Naturaldisaster:",
    "text": "2.1 Dataprepartion Naturaldisaster:\n\nNach einer kurzen explorativen Datenanalyse, in der wir die Spalten und NaN-Werte betrachteten, starteten wir direkt mit der Datenvorbereitung für den Datensatz zu Naturkatastrophen.\nZuerst normalisierten wir die Länder mithilfe der Koordinaten und wandelten sie direkt in DataFrames um.\nAnschließend entfernten wir bestimmte Spalten, darunter “External IDs”, “Event Name”, “OFDA Response”, “Declaration”, “AID Contribution (’000 US$)”, “Magnitude”, “Magnitude Scale”, “River Basin”, “Admin Units”, “Entry Date”, “Last Update”. Diese Spalten waren entweder für unsere Visualisierung nicht relevant oder enthielten zu viele NaN-Werte, was ihre Aussagekraft beeinträchtigt hätte.\nNach diesem Schritt entfernten wir die verbleibenden NaN-Werte.\nAnschließend erfolgte die Umwandlung der Datentypen, wobei entsprechender Python-Code verwendet wurde.\n\nDer Code erstellte einen Pandas DataFrame namens empty_df, der alle möglichen Kombinationen von ‘Country’, ‘Disaster Type’ und ‘Start Year’ enthielt. Dieser DataFrame wurde durch die Verwendung von MultiIndex erstellt, um die verschiedenen Dimensionen zu berücksichtigen.\nDer Code gruppierte dann einen vorhandenen DataFrame (df_cleaned) nach den Spalten ‘Country’, ‘Disaster Type’, ‘Start Year’ und ‘ISO’, um die Häufigkeit von Katastrophen pro Land, Katastrophentyp und Startjahr zu zählen. Diese Informationen wurden in einem DataFrame namens df_nd_grouped gespeichert. Der leere DataFrame wurde dann mit diesen gruppierten Daten gemerged, um fehlende Werte mit 0 zu füllen. Schließlich erfolgte eine weitere Fusion mit einem DataFrame (df_coordinates), der Länderkoordinaten enthielt, um ein finales DataFrame namens merged_group zu erstellen.\n\nAbschließend wurde der DataFrame als CSV-Datei gespeichert.\nDie verwendeten Bibliotheken waren Pandas und NumPy. Zusätzlich wurde eine JSON-Datei für die Ländercodes importiert.\n\n\nimport pandas as pd\nimport altair as alt\nfrom vega_datasets import data\n\nalt.data_transformers.disable_max_rows()\n\ndf_nd = pd.read_csv('./data/InternationalDisaster_cleaned.csv')\ndf_nd_full = pd.read_csv('data/InternationalDisaster.csv')\ndf_nd_grouped = pd.read_csv('data/InternationalDisaster_grouped.csv')\ndf_temp = pd.read_csv('data/GlobalLandTemperatur_cleaned.csv')\ndf_temp_agg = pd.read_csv('data/GlobalLandTemperatur_aggregated.csv')\ndf_temp_nd_combined = pd.read_csv('data/df_temp_nd_combined.csv')\ncountries = alt.topo_feature(data.world_110m.url, 'countries')\n\nchart_title_color = \"#d6d6d6\"\nchart_line_color = \"#3A86FF\"\nchart_marker_color = \"#e00707\"\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\n\nnd_type_colors_red = {\n    'Extreme temperature': nd_type_colors['Extreme temperature'],\n    'Storm': nd_type_colors['Storm'],\n    'Flood': nd_type_colors['Flood']\n}\ndf_nd.head()\n\n\n\n\n\n\n\n\nDisNo.\nHistoric\nClassification Key\nDisaster Group\nDisaster Subgroup\nDisaster Type\nDisaster Subtype\nISO\nCountry\nSubregion\n...\nStart Year\nStart Month\nStart Day\nEnd Year\nEnd Month\nEnd Day\nTotal Deaths\nNo. Affected\nTotal Affected\nCPI\n\n\n\n\n0\n1920\nYes\nnat-bio-epi-bac\nNatural\nBiological\nEpidemic\nBacterial disease\nIND\nIndia\nSouthern Asia\n...\n1920\nNaN\nNaN\n1920\nNaN\nNaN\n2000000.0\nNaN\nNaN\n6.832935e+09\n\n\n1\n1920\nYes\nnat-bio-epi-bac\nNatural\nBiological\nEpidemic\nBacterial disease\nIND\nIndia\nSouthern Asia\n...\n1920\nNaN\nNaN\n1920\nNaN\nNaN\n500000.0\nNaN\nNaN\n6.832935e+09\n\n\n2\n1920\nYes\nnat-hyd-flo-flo\nNatural\nHydrological\nFlood\nFlood (General)\nDFR\nGermany\nWestern Europe\n...\n1920\n8.0\nNaN\n1920\n8.0\nNaN\nNaN\nNaN\nNaN\n6.832935e+09\n\n\n3\n1920\nYes\nnat-geo-ear-gro\nNatural\nGeophysical\nEarthquake\nGround movement\nCHN\nChina\nEastern Asia\n...\n1920\n12.0\n16.0\n1920\n12.0\n16.0\n180000.0\nNaN\nNaN\n6.832935e+09\n\n\n4\n1920\nYes\nnat-bio-epi-vir\nNatural\nBiological\nEpidemic\nViral disease\nAIA\nAnguilla\nLatin America and the Caribbean\n...\n1920\n1.0\nNaN\n1920\n1.0\nNaN\nNaN\nNaN\nNaN\n6.832935e+09\n\n\n\n\n5 rows × 23 columns"
  },
  {
    "objectID": "DataPrep.html#deep-dive-into-data",
    "href": "DataPrep.html#deep-dive-into-data",
    "title": "2  Dataprep",
    "section": "2.3 Deep dive into Data:",
    "text": "2.3 Deep dive into Data:\nUm ein umfassenderes Verständnis für unsere Daten zu entwickeln und die Aussagekraft unserer Ergebnisse zu verstärken, haben wir mithilfe von Altair zunächst grundlegende Diagramme erstellt. Dies diente dazu, eine tiefere Einsicht in unsere Daten zu gewinnen. Wir begannen mit der Entwicklung eines Diagramms, das den Temperaturverlauf von 1920 bis 2013 zeigt. Anschließend erstellten wir ein Diagramm mit der Anzahl der Naturkatastrophen von 1920 bis 2013. Zusätzlich wurden weitere Balkendiagramme entworfen, um das Verhältnis verschiedener Naturkatastrophen zu visualisieren. Obwohl dieser Prozess mitunter anspruchsvoll war, erwies er sich als äußerst hilfreich für die Fortschritte in unserem Projekt. Die erstellten Diagramme ermöglichten uns tiefe Einblicke in unsere Daten zu gewinnen.\nTemperaturverlauf & Katastrophen (Sturm, Hitze und Fluten ) 1920 bis 2013\n\nglobal_avg_temp = df_temp_agg.groupby(\n    'Year')['AverageTemperature'].mean().reset_index()\n\nglobal_avg_temp['Year'] = pd.to_datetime(\n    global_avg_temp['Year'], format='%Y')\nglobal_avg_temp['Year'] = global_avg_temp['Year'].dt.year\n\nglobal_avg_temp['AverageTemperature'] = global_avg_temp['AverageTemperature'].round(\n    2)\n\nglob_temp_chart = alt.Chart(global_avg_temp).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n        titleAnchor='start',\n        labelColor='black',\n    )),\n    y=alt.Y('AverageTemperature:Q', axis=alt.Axis(\n        title='Temperatur in °C',\n        titleAnchor='start',\n        labelColor='black',\n        titleColor='black',\n    ), scale=alt.Scale(\n        domain=[18, 21])),\n    tooltip=['Year', 'AverageTemperature']\n).properties(\n    width=950,\n    title={\n        \"text\": \"Globaler Temperaturverlauf (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\n\n\nglob_temp_regression = glob_temp_chart.transform_regression(\n    'Year', 'AverageTemperature', method='linear'\n).mark_line(color=chart_marker_color)\n\ntext_at_end = alt.Chart(pd.DataFrame({'end_position': [19.8]})).mark_text(\n    align='left',\n    baseline='middle',\n    dx=360,\n    dy=0,\n    color=chart_marker_color,\n    text='Anstieg: 0.8 °C',\n    fontWeight=800,\n    fontSize=14\n).encode(\n    y='end_position:Q'\n)\n\n\nglob_temp_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n\n(glob_temp_chart + glob_temp_regression +\n text_at_end).configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\n\ndf_nd_filtered = df_nd_grouped[(df_nd_grouped['Frequency'] &gt; 0) & ((\n    df_nd_grouped['Disaster Type'] == 'Flood') | (df_nd_grouped['Disaster Type'] == 'Storm') | (df_nd_grouped['Disaster Type'] == 'Extreme temperatur'))]\nglobal_disaster_freq = df_nd_filtered.groupby(\n    ['Start Year'])['Frequency'].sum().reset_index()\n\nnd_line_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Start Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n        labelColor='black',\n    )),\n    y=alt.Y('Frequency:Q').axis(\n        title='Häufigkeit',\n        titleAnchor='start',\n        labelColor='black',\n        titleColor='black'\n    ),\n).properties(\n    width=950,\n    height=290,\n    title={\n        \"text\": \"Weltweite Häufigkeit pro Jahr: Stürmen, Extremtemperaturen und Überschwemmungen (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\nnd_line_chart.configure(background=\"rgba(0, 0, 0, 0)\")"
  },
  {
    "objectID": "Dashboard.html#dashboard-konzeption",
    "href": "Dashboard.html#dashboard-konzeption",
    "title": "3  Entwicklung des Dashboards",
    "section": "3.1 Dashboard Konzeption:",
    "text": "3.1 Dashboard Konzeption:\n\nBei der Konzeption des Dashboards orientierten wir uns an folgenden Anforderungen: Interaktivität, Nutzung von mindestens 5 verschiedenen Charttypen, sinnvolle Verwendung von Farben und Legenden sowie unterschiedliche visuelle Aufbereitung der Diagramme.\nDie zugrunde liegende Aussage betonte die Wichtigkeit der Bewältigung des Klimawandels und der Minderung seiner Auswirkungen für den Schutz unseres Planeten, die Sicherheit der Menschheit und die Erhaltung der Lebensgrundlagen für zukünftige Generationen."
  },
  {
    "objectID": "Dashboard.html#dashboard-code",
    "href": "Dashboard.html#dashboard-code",
    "title": "3  Entwicklung des Dashboards",
    "section": "3.2 Dashboard Code:",
    "text": "3.2 Dashboard Code:\n\nNach Abschluss der Konzeptionsphase begann die interessante Phase der Dashboard-Entwicklung.\nFür die Erstellung des Dashboards wurden Streamlit, Altair, das VegaDataset, pandas, numpy und pycountry genutzt.\nDie Ordnerstruktur für das Projekt sieht wie folgt aus:\n\ncharts: Enthält alle erstellten Charts, die im Dashboard zu finden sind. Der Unterordner __pycache__ speichert Zwischenspeicherdateien.\nmedia: Beinhaltet alle Flaggen der Länder im SVG-Format.\nstyles: Enthält das Styling für das Dashboard.\nutils: Teilt sich weiter auf:\n\ndata: Enthält CSV-Dateien, die für die Erstellung der Diagramme notwendig sind.\n__pycache__: Speichert Zwischenspeicherdateien.\n\n\nInnerhalb des charts-Ordners befinden sich alle erstellten Charts, die im Dashboard integriert sind.\nIm media-Ordner sind die SVG-Dateien der Länderflaggen abgelegt.\nDer styles-Ordner enthält das Styling für das Dashboard.\nDer utils-Ordner gliedert sich in weitere Unterordner:\n\ndata: Enthält alle CSV-Dateien, die für die Diagrammerstellung benötigt werden.\n__pycache__: Speichert Zwischenspeicherdateien.\n\nZusätzlich existieren die Dateien helper.py, load_data.py, tweaker.py, nd_type_color.py sowie die beiden Dataprep-Skripte.\nDie Datei analysis.ipynb beinhaltet die Analyse des Projekts. Es gibt außerdem eine .gitignore-Datei, requirements.txt und read.md.\nZuletzt existiert die Datei app.py, die das eigentliche Dashboard darstellt."
  },
  {
    "objectID": "Dashboard.html#dashboard-aufbau",
    "href": "Dashboard.html#dashboard-aufbau",
    "title": "3  Entwicklung des Dashboards",
    "section": "3.3 Dashboard Aufbau",
    "text": "3.3 Dashboard Aufbau\n\nDas Chart “Katastrophenverlauf” wurde genutzt, um zu zeigen, dass die Anzahl von Naturkatastrophen in den letzten Jahren zugenommen hat.\nEbenso wurde der Linechart über den Temperaturverlauf verwendet, um darzustellen, dass die Durchschnittstemperatur auf der Erde seit Jahrzehnten steigt, insbesondere unter anthropologischem Einfluss.\nBeide Charts wurden bewusst am oberen Teil des Dashboards platziert, um dem Betrachter diese Informationen direkt zu Beginn zugänglich zu machen, da daraufhin eine Verbindung der beiden Graphen erfolgt.\nDer nächste Graph kombiniert die beiden Datensätze und zeigt die Anzahl der Naturkatastrophen in Abhängigkeit von der Durchschnittstemperatur. Der Scatterplot verdeutlicht, dass ein Großteil der Verteilung bei höheren Temperaturen liegt und unterstützt somit unsere Aussage.\nAnschließend gewährt ein tieferer Einblick in die Verteilung von Naturkatastrophen bezüglich der Frequenz durch die Barcharts.\nDie Weltkarte soll betonen, dass verschiedene Regionen der Welt unterschiedlich von dieser Entwicklung betroffen sind, insbesondere Länder des Globalen Südens.\nDie Analyse der Temperaturzonen unterstreicht diesen Aspekt.\nDie Interaktivität wurde durch verschiedene Filter umgesetzt, sodass Jahr, Katastrophentyp und Land filterbar sind und die Graphen “Katastrophenverlauf” und “Scatterplot” sich entsprechend ändern.\nDie Abfolge der Graphen soll die Kernaussage verdeutlichen, dass durch ansteigende Temperaturen Naturkatastrophen zunehmen."
  }
]
[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Template",
    "section": "",
    "text": "1 Welcome to My Quarto Book\nThis is the home page of my Quarto book. You can customize the content here."
  },
  {
    "objectID": "Ideenfindung.html#fragestellung-erarbeiten",
    "href": "Ideenfindung.html#fragestellung-erarbeiten",
    "title": "1  Themidee finden",
    "section": "1.1 Fragestellung erarbeiten:",
    "text": "1.1 Fragestellung erarbeiten:\nWir entschieden uns, uns mit einem Thema auseinanderzusetzen, das nicht nur unser persönliches Interesse weckt, sondern auch direkte Auswirkungen auf unser Leben hat. Infolgedessen rückte der Klimawandel und seine Einflüsse auf Naturkatastrophen in den Mittelpunkt unserer Aufmerksamkeit. Daher war es für uns selbstverständlich, die Auswirkungen des Klimawandels auf die Häufigkeit der Naturkatastrophen anhand unserer Daten darzustellen."
  },
  {
    "objectID": "Ideenfindung.html#erarbeitung-big-idea-worksheet",
    "href": "Ideenfindung.html#erarbeitung-big-idea-worksheet",
    "title": "1  Themidee finden",
    "section": "1.2 Erarbeitung Big Idea Worksheet:",
    "text": "1.2 Erarbeitung Big Idea Worksheet:\nNachdem unsere erste Fragestellung im Raum stand, befassten wir uns mit der Erstellung des Big Ideas Worksheets. Bei der Erstellung des Big Idea Worksheets stießen wir auf eine Herausforderung, insbesondere bei der genauen Bestimmung unserer Zielgruppe für das gewählte Thema. Aufgrund der Tatsache, dass der Klimawandel jeden Einzelnen betrifft, fiel es uns schwer, die Hörerschaft präzise zu definieren. Nichtsdestotrotz haben wir uns darauf verständigt, uns auf die Zielgruppe zu konzentrieren, die den größten Beitrag leisten kann oder das größte Interesse an unserer Visualisierung zeigt – insbesondere die Bereiche Politik und Wissenschaft.\nEine weitere Schwierigkeit bestand in der Beschaffung von Daten, da die Dokumentation von Naturkatastrophen, insbesondere in der Vergangenheit, oft unzureichend ist."
  },
  {
    "objectID": "Ideenfindung.html#datensatz-beschaffung",
    "href": "Ideenfindung.html#datensatz-beschaffung",
    "title": "1  Themidee finden",
    "section": "1.3 Datensatz Beschaffung:",
    "text": "1.3 Datensatz Beschaffung:\nWir haben verschiedene Datenbanken durchsucht, um geeignete Daten für unsere Analyse zu finden. Unsere Auswahlkriterien umfassten den Zeitraum von 1920 bis mindestens 2010, verschiedene Kategorien von Naturkatastrophen, die Vertrauenswürdigkeit der Datenquellen und eine moderate Anzahl von fehlenden Werten bei den Temperaturdaten. In diesem Zusammenhang haben wir uns für ein Kaggle-Datenset entschieden, das ursprünglich vom Lawrence Berkeley National Laboratory stammt, sowie einen selbst zusammengestellten Datensatz aus der Public EM-DAT Database.\nDie Entscheidung für diese beiden Datensätze erfolgte aufgrund ihrer Erfüllung unserer spezifischen Anforderungen. Die Beschränkung auf zwei Datensätze ergab sich, da wir während unserer Recherche nur wenige Sets gefunden haben, die unseren Kriterien entsprachen. Insbesondere stellten NaN-Werte in Bezug auf Katastrophen in den 1980er Jahren eine Herausforderung dar. Darüber hinaus waren weitere Datensätze nicht erforderlich, da dies zu einer Duplizierung der Informationen geführt hätte, und der Naturaldisaster-Datensatz bereits ausreichende Informationen enthielt.\nNachdem wir nun erfolgreich unsere Daten gefunden haben und unsere Big Idea Worksheets ausgerarbeitet haben, befassten wir uns mit dem Thema der Dataprepartion"
  },
  {
    "objectID": "DataPrep.html#data-preparation-für-temperatur",
    "href": "DataPrep.html#data-preparation-für-temperatur",
    "title": "2  Dataprep",
    "section": "2.2 Data Preparation für Temperatur:",
    "text": "2.2 Data Preparation für Temperatur:\nZu Beginn der Datenvorbereitung für den Datensatz wurde jedem Land eine eindeutige UID-Zelle zugewiesen und diese wurde befüllt. Anschließend wurde die Datenstruktur durch das Betrachten von Head und Tail überprüft, woraufhin die verbleibenden NaN-Werte entfernt wurden. Danach wurden die Datentypen betrachtet und angepasst. Hierbei erfolgte eine Änderung des Datetime-Formats und der Datentyp der Spalte “Country” wurde zu “Category” geändert. Anschließend wurde der DataFrame nach der Jahreszahl gefiltert und alle UID-Werte, die als “Unknown” gekennzeichnet waren, wurden entfernt. Nach dieser Aktion erfolgte die Verknüpfung mit den ISO-Ländercodes, wobei entsprechender Python-Code verwendet wurde. Anschließend wurden die Ländernamen an die Ländernamen des Datensatzes zu Naturkatastrophen angepasst. Zum Abschluss wurde eine CSV-Datei erstellt. Die verwendeten Bibliotheken waren Pandas und pycountry.\n\ndf_temp.head()\n\n\n\n\n\n\n\n\ndt\nAverageTemperature\nAverageTemperatureUncertainty\nuid\nISO\nCountry\n\n\n\n\n0\n1920-01-01\n1.385\n0.589\n4\nAFG\nAfghanistan\n\n\n1\n1920-02-01\n0.689\n0.742\n4\nAFG\nAfghanistan\n\n\n2\n1920-03-01\n7.944\n0.953\n4\nAFG\nAfghanistan\n\n\n3\n1920-04-01\n11.725\n0.849\n4\nAFG\nAfghanistan\n\n\n4\n1920-05-01\n17.695\n0.662\n4\nAFG\nAfghanistan"
  },
  {
    "objectID": "DataPrep.html",
    "href": "DataPrep.html",
    "title": "2  Dataprep",
    "section": "",
    "text": "Wir haben unsere beiden Datensätze unterschiedlich aufbereitet. Im Folgenden wird dies genauer erläutert.\n*** Dataprepartion Naturaldisaster: *** - Nach einer kurzen explorativen Datenanalyse, in der wir die Spalten und NaN-Werte betrachteten, starteten wir direkt mit der Datenvorbereitung für den Datensatz zu Naturkatastrophen. - Zuerst normalisierten wir die Länder mithilfe der Koordinaten und wandelten sie direkt in DataFrames um. - Anschließend entfernten wir bestimmte Spalten, darunter “External IDs”, “Event Name”, “OFDA Response”, “Declaration”, “AID Contribution (‘000 US$)“,”Magnitude”, “Magnitude Scale”, “River Basin”, “Admin Units”, “Entry Date”, “Last Update”. Diese Spalten waren entweder für unsere Visualisierung nicht relevant oder enthielten zu viele NaN-Werte, was ihre Aussagekraft beeinträchtigt hätte. - Nach diesem Schritt entfernten wir die verbleibenden NaN-Werte. - Anschließend erfolgte die Umwandlung der Datentypen, wobei entsprechender Python-Code verwendet wurde. - Der Code erstellte einen Pandas DataFrame namens empty_df, der alle möglichen Kombinationen von ’Country’, ‘Disaster Type’ und ‘Start Year’ enthielt. Dieser DataFrame wurde durch die Verwendung von MultiIndex erstellt, um die verschiedenen Dimensionen zu berücksichtigen. - Der Code gruppierte dann einen vorhandenen DataFrame (df_cleaned) nach den Spalten ‘Country’, ‘Disaster Type’, ‘Start Year’ und ‘ISO’, um die Häufigkeit von Katastrophen pro Land, Katastrophentyp und Startjahr zu zählen. Diese Informationen wurden in einem DataFrame namens df_nd_grouped gespeichert. Der leere DataFrame wurde dann mit diesen gruppierten Daten gemerged, um fehlende Werte mit 0 zu füllen. Schließlich erfolgte eine weitere Fusion mit einem DataFrame (df_coordinates), der Länderkoordinaten enthielt, um ein finales DataFrame namens merged_group zu erstellen. - Abschließend wurde der DataFrame als CSV-Datei gespeichert. - Die verwendeten Bibliotheken waren Pandas und NumPy. Zusätzlich wurde eine JSON-Datei für die Ländercodes importiert. → df head einügen\n\nimport pandas as pd\nimport altair as alt\nfrom vega_datasets import data\n\nalt.data_transformers.disable_max_rows()\n\ndf_nd = pd.read_csv('./data/InternationalDisaster_cleaned.csv')\ndf_nd_full = pd.read_csv('data/InternationalDisaster.csv')\ndf_nd_grouped = pd.read_csv('data/InternationalDisaster_grouped.csv')\ndf_temp = pd.read_csv('data/GlobalLandTemperatur_cleaned.csv')\ndf_temp_agg = pd.read_csv('data/GlobalLandTemperatur_aggregated.csv')\ndf_temp_nd_combined = pd.read_csv('data/df_temp_nd_combined.csv')\ncountries = alt.topo_feature(data.world_110m.url, 'countries')\n\nchart_title_color = \"#d6d6d6\"\nchart_line_color = \"#3A86FF\"\nchart_marker_color = \"#e00707\"\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\n\nnd_type_colors_red = {\n    'Extreme temperature': nd_type_colors['Extreme temperature'],\n    'Storm': nd_type_colors['Storm'],\n    'Flood': nd_type_colors['Flood']\n}\n\n\ndf_nd.head()\n\n\n\n\n\n\n\n\nDisNo.\nHistoric\nClassification Key\nDisaster Group\nDisaster Subgroup\nDisaster Type\nDisaster Subtype\nISO\nCountry\nSubregion\n...\nStart Year\nStart Month\nStart Day\nEnd Year\nEnd Month\nEnd Day\nTotal Deaths\nNo. Affected\nTotal Affected\nCPI\n\n\n\n\n0\n1920\nYes\nnat-bio-epi-bac\nNatural\nBiological\nEpidemic\nBacterial disease\nIND\nIndia\nSouthern Asia\n...\n1920\nNaN\nNaN\n1920\nNaN\nNaN\n2000000.0\nNaN\nNaN\n6.832935e+09\n\n\n1\n1920\nYes\nnat-bio-epi-bac\nNatural\nBiological\nEpidemic\nBacterial disease\nIND\nIndia\nSouthern Asia\n...\n1920\nNaN\nNaN\n1920\nNaN\nNaN\n500000.0\nNaN\nNaN\n6.832935e+09\n\n\n2\n1920\nYes\nnat-hyd-flo-flo\nNatural\nHydrological\nFlood\nFlood (General)\nDFR\nGermany\nWestern Europe\n...\n1920\n8.0\nNaN\n1920\n8.0\nNaN\nNaN\nNaN\nNaN\n6.832935e+09\n\n\n3\n1920\nYes\nnat-geo-ear-gro\nNatural\nGeophysical\nEarthquake\nGround movement\nCHN\nChina\nEastern Asia\n...\n1920\n12.0\n16.0\n1920\n12.0\n16.0\n180000.0\nNaN\nNaN\n6.832935e+09\n\n\n4\n1920\nYes\nnat-bio-epi-vir\nNatural\nBiological\nEpidemic\nViral disease\nAIA\nAnguilla\nLatin America and the Caribbean\n...\n1920\n1.0\nNaN\n1920\n1.0\nNaN\nNaN\nNaN\nNaN\n6.832935e+09\n\n\n\n\n5 rows × 23 columns\n\n\n\n*** Data Preparation für Temperatur: *** - Zu Beginn der Datenvorbereitung für den Datensatz wurde jedem Land eine eindeutige UID-Zelle zugewiesen und diese wurde befüllt. - Anschließend wurde die Datenstruktur durch das Betrachten von Head und Tail überprüft, woraufhin die verbleibenden NaN-Werte entfernt wurden. - Danach wurden die Datentypen betrachtet und angepasst. Hierbei erfolgte eine Änderung des Datetime-Formats und der Datentyp der Spalte “Country” wurde zu “Category” geändert. - Anschließend wurde der DataFrame nach der Jahreszahl gefiltert und alle UID-Werte, die als “Unknown” gekennzeichnet waren, wurden entfernt. - Nach dieser Aktion erfolgte die Verknüpfung mit den ISO-Ländercodes, wobei entsprechender Python-Code verwendet wurde. - Anschließend wurden die Ländernamen an die Ländernamen des Datensatzes zu Naturkatastrophen angepasst. - Zum Abschluss wurde eine CSV-Datei erstellt. - Die verwendeten Bibliotheken waren Pandas und pycountry.\n\ndf_temp.head()\n\n\n\n\n\n\n\n\ndt\nAverageTemperature\nAverageTemperatureUncertainty\nuid\nISO\nCountry\n\n\n\n\n0\n1920-01-01\n1.385\n0.589\n4\nAFG\nAfghanistan\n\n\n1\n1920-02-01\n0.689\n0.742\n4\nAFG\nAfghanistan\n\n\n2\n1920-03-01\n7.944\n0.953\n4\nAFG\nAfghanistan\n\n\n3\n1920-04-01\n11.725\n0.849\n4\nAFG\nAfghanistan\n\n\n4\n1920-05-01\n17.695\n0.662\n4\nAFG\nAfghanistan\n\n\n\n\n\n\n\n\n2.0.1 Deep dive into Data:\nUm ein umfassenderes Verständnis für unsere Daten zu entwickeln und die Aussagekraft unserer Ergebnisse zu verstärken, haben wir mithilfe von Altair zunächst grundlegende Diagramme erstellt. Dies diente dazu, eine tiefere Einsicht in unsere Daten zu gewinnen. Wir begannen mit der Entwicklung eines Diagramms, das den Temperaturverlauf von 1920 bis 2013 zeigt. Anschließend erstellten wir ein Diagramm mit der Anzahl der Naturkatastrophen von 1920 bis 2013. Zusätzlich wurden weitere Balkendiagramme entworfen, um das Verhältnis verschiedener Naturkatastrophen zu visualisieren. Obwohl dieser Prozess mitunter anspruchsvoll war, erwies er sich als äußerst hilfreich für die Fortschritte in unserem Projekt. Die erstellten Diagramme ermöglichten uns tiefe Einblicke in unsere Daten zu gewinnen.\n\n\n2.0.2 Temperaturverlauf & Katastrophen (Sturm, Hitze und Fluten ) 1920 bis 2013\n\nglobal_avg_temp = df_temp_agg.groupby(\n    'Year')['AverageTemperature'].mean().reset_index()\n\nglobal_avg_temp['Year'] = pd.to_datetime(\n    global_avg_temp['Year'], format='%Y')\nglobal_avg_temp['Year'] = global_avg_temp['Year'].dt.year\n\nglobal_avg_temp['AverageTemperature'] = global_avg_temp['AverageTemperature'].round(\n    2)\n\nglob_temp_chart = alt.Chart(global_avg_temp).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n        titleAnchor='start',\n        labelColor='white',\n    )),\n    y=alt.Y('AverageTemperature:Q', axis=alt.Axis(\n        title='Temperatur in °C',\n        titleAnchor='start',\n        labelColor='white',\n        titleColor='white',\n    ), scale=alt.Scale(\n        domain=[18, 21])),\n    tooltip=['Year', 'AverageTemperature']\n).properties(\n    width=950,\n    title={\n        \"text\": \"Globaler Temperaturverlauf (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\n\n\nglob_temp_regression = glob_temp_chart.transform_regression(\n    'Year', 'AverageTemperature', method='linear'\n).mark_line(color=chart_marker_color)\n\ntext_at_end = alt.Chart(pd.DataFrame({'end_position': [19.8]})).mark_text(\n    align='left',\n    baseline='middle',\n    dx=360,\n    dy=0,\n    color=chart_marker_color,\n    text='Anstieg: 0.8 °C',\n    fontWeight=800,\n    fontSize=14\n).encode(\n    y='end_position:Q'\n)\n\n\nglob_temp_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\n\ndf_nd_filtered = df_nd_grouped[(df_nd_grouped['Frequency'] &gt; 0) & ((\n    df_nd_grouped['Disaster Type'] == 'Flood') | (df_nd_grouped['Disaster Type'] == 'Storm') | (df_nd_grouped['Disaster Type'] == 'Extreme temperatur'))]\nglobal_disaster_freq = df_nd_filtered.groupby(\n    ['Start Year'])['Frequency'].sum().reset_index()\n\nnd_line_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Start Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n        labelColor='white',\n    )),\n    y=alt.Y('Frequency:Q').axis(\n        title='Häufigkeit',\n        titleAnchor='start',\n        labelColor='white',\n        titleColor='white'\n    ),\n).properties(\n    width=950,\n    height=290,\n    title={\n        \"text\": \"Weltweite Häufigkeit pro Jahr: Stürmen, Extremtemperaturen und Überschwemmungen (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\nnd_line_chart.configure(background=\"rgba(0, 0, 0, 0)\")"
  },
  {
    "objectID": "DataPrep.html#dataprepartion-naturaldisaster",
    "href": "DataPrep.html#dataprepartion-naturaldisaster",
    "title": "2  Dataprep",
    "section": "2.1 Dataprepartion Naturaldisaster:",
    "text": "2.1 Dataprepartion Naturaldisaster:\n\nNach einer kurzen explorativen Datenanalyse, in der wir die Spalten und NaN-Werte betrachteten, starteten wir direkt mit der Datenvorbereitung für den Datensatz zu Naturkatastrophen.\nZuerst normalisierten wir die Länder mithilfe der Koordinaten und wandelten sie direkt in DataFrames um.\nAnschließend entfernten wir bestimmte Spalten, darunter “External IDs”, “Event Name”, “OFDA Response”, “Declaration”, “AID Contribution (’000 US$)”, “Magnitude”, “Magnitude Scale”, “River Basin”, “Admin Units”, “Entry Date”, “Last Update”. Diese Spalten waren entweder für unsere Visualisierung nicht relevant oder enthielten zu viele NaN-Werte, was ihre Aussagekraft beeinträchtigt hätte.\nNach diesem Schritt entfernten wir die verbleibenden NaN-Werte.\nAnschließend erfolgte die Umwandlung der Datentypen, wobei entsprechender Python-Code verwendet wurde.\n\nDer Code erstellte einen Pandas DataFrame namens empty_df, der alle möglichen Kombinationen von ‘Country’, ‘Disaster Type’ und ‘Start Year’ enthielt. Dieser DataFrame wurde durch die Verwendung von MultiIndex erstellt, um die verschiedenen Dimensionen zu berücksichtigen.\nDer Code gruppierte dann einen vorhandenen DataFrame (df_cleaned) nach den Spalten ‘Country’, ‘Disaster Type’, ‘Start Year’ und ‘ISO’, um die Häufigkeit von Katastrophen pro Land, Katastrophentyp und Startjahr zu zählen. Diese Informationen wurden in einem DataFrame namens df_nd_grouped gespeichert. Der leere DataFrame wurde dann mit diesen gruppierten Daten gemerged, um fehlende Werte mit 0 zu füllen. Schließlich erfolgte eine weitere Fusion mit einem DataFrame (df_coordinates), der Länderkoordinaten enthielt, um ein finales DataFrame namens merged_group zu erstellen.\n\nAbschließend wurde der DataFrame als CSV-Datei gespeichert.\nDie verwendeten Bibliotheken waren Pandas und NumPy. Zusätzlich wurde eine JSON-Datei für die Ländercodes importiert.\n\n\nimport pandas as pd\nimport altair as alt\nfrom vega_datasets import data\n\nalt.data_transformers.disable_max_rows()\n\ndf_nd = pd.read_csv('./data/InternationalDisaster_cleaned.csv')\ndf_nd_full = pd.read_csv('data/InternationalDisaster.csv')\ndf_nd_grouped = pd.read_csv('data/InternationalDisaster_grouped.csv')\ndf_temp = pd.read_csv('data/GlobalLandTemperatur_cleaned.csv')\ndf_temp_agg = pd.read_csv('data/GlobalLandTemperatur_aggregated.csv')\ndf_temp_nd_combined = pd.read_csv('data/df_temp_nd_combined.csv')\ncountries = alt.topo_feature(data.world_110m.url, 'countries')\n\nchart_title_color = \"#d6d6d6\"\nchart_line_color = \"#3A86FF\"\nchart_marker_color = \"#e00707\"\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\n\nnd_type_colors_red = {\n    'Extreme temperature': nd_type_colors['Extreme temperature'],\n    'Storm': nd_type_colors['Storm'],\n    'Flood': nd_type_colors['Flood']\n}\ndf_nd.head()\n\n\n\n\n\n\n\n\nDisNo.\nHistoric\nClassification Key\nDisaster Group\nDisaster Subgroup\nDisaster Type\nDisaster Subtype\nISO\nCountry\nSubregion\n...\nStart Year\nStart Month\nStart Day\nEnd Year\nEnd Month\nEnd Day\nTotal Deaths\nNo. Affected\nTotal Affected\nCPI\n\n\n\n\n0\n1920\nYes\nnat-bio-epi-bac\nNatural\nBiological\nEpidemic\nBacterial disease\nIND\nIndia\nSouthern Asia\n...\n1920\nNaN\nNaN\n1920\nNaN\nNaN\n2000000.0\nNaN\nNaN\n6.832935e+09\n\n\n1\n1920\nYes\nnat-bio-epi-bac\nNatural\nBiological\nEpidemic\nBacterial disease\nIND\nIndia\nSouthern Asia\n...\n1920\nNaN\nNaN\n1920\nNaN\nNaN\n500000.0\nNaN\nNaN\n6.832935e+09\n\n\n2\n1920\nYes\nnat-hyd-flo-flo\nNatural\nHydrological\nFlood\nFlood (General)\nDFR\nGermany\nWestern Europe\n...\n1920\n8.0\nNaN\n1920\n8.0\nNaN\nNaN\nNaN\nNaN\n6.832935e+09\n\n\n3\n1920\nYes\nnat-geo-ear-gro\nNatural\nGeophysical\nEarthquake\nGround movement\nCHN\nChina\nEastern Asia\n...\n1920\n12.0\n16.0\n1920\n12.0\n16.0\n180000.0\nNaN\nNaN\n6.832935e+09\n\n\n4\n1920\nYes\nnat-bio-epi-vir\nNatural\nBiological\nEpidemic\nViral disease\nAIA\nAnguilla\nLatin America and the Caribbean\n...\n1920\n1.0\nNaN\n1920\n1.0\nNaN\nNaN\nNaN\nNaN\n6.832935e+09\n\n\n\n\n5 rows × 23 columns"
  },
  {
    "objectID": "DataPrep.html#deep-dive-into-data",
    "href": "DataPrep.html#deep-dive-into-data",
    "title": "2  Dataprep",
    "section": "2.3 Deep dive into Data:",
    "text": "2.3 Deep dive into Data:\nUm ein umfassenderes Verständnis für unsere Daten zu entwickeln und die Aussagekraft unserer Ergebnisse zu verstärken, haben wir mithilfe von Altair zunächst grundlegende Diagramme erstellt. Dies diente dazu, eine tiefere Einsicht in unsere Daten zu gewinnen. Wir begannen mit der Entwicklung eines Diagramms, das den Temperaturverlauf von 1920 bis 2013 zeigt. Anschließend erstellten wir ein Diagramm mit der Anzahl der Naturkatastrophen von 1920 bis 2013. Zusätzlich wurden weitere Balkendiagramme entworfen, um das Verhältnis verschiedener Naturkatastrophen zu visualisieren. Obwohl dieser Prozess mitunter anspruchsvoll war, erwies er sich als äußerst hilfreich für die Fortschritte in unserem Projekt. Die erstellten Diagramme ermöglichten uns tiefe Einblicke in unsere Daten zu gewinnen.\nTemperaturverlauf & Katastrophen (Sturm, Hitze und Fluten ) 1920 bis 2013\n\nglobal_avg_temp = df_temp_agg.groupby(\n    'Year')['AverageTemperature'].mean().reset_index()\n\nglobal_avg_temp['Year'] = pd.to_datetime(\n    global_avg_temp['Year'], format='%Y')\nglobal_avg_temp['Year'] = global_avg_temp['Year'].dt.year\n\nglobal_avg_temp['AverageTemperature'] = global_avg_temp['AverageTemperature'].round(\n    2)\n\nglob_temp_chart = alt.Chart(global_avg_temp).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n        titleAnchor='start',\n        labelColor='black',\n    )),\n    y=alt.Y('AverageTemperature:Q', axis=alt.Axis(\n        title='Temperatur in °C',\n        titleAnchor='start',\n        labelColor='black',\n        titleColor='black',\n    ), scale=alt.Scale(\n        domain=[18, 21])),\n    tooltip=['Year', 'AverageTemperature']\n).properties(\n    width=950,\n    title={\n        \"text\": \"Globaler Temperaturverlauf (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\n\n\nglob_temp_regression = glob_temp_chart.transform_regression(\n    'Year', 'AverageTemperature', method='linear'\n).mark_line(color=chart_marker_color)\n\ntext_at_end = alt.Chart(pd.DataFrame({'end_position': [19.8]})).mark_text(\n    align='left',\n    baseline='middle',\n    dx=360,\n    dy=0,\n    color=chart_marker_color,\n    text='Anstieg: 0.8 °C',\n    fontWeight=800,\n    fontSize=14\n).encode(\n    y='end_position:Q'\n)\n\n\nglob_temp_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n\n(glob_temp_chart + glob_temp_regression +\n text_at_end).configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\n\ndf_nd_filtered = df_nd_grouped[(df_nd_grouped['Frequency'] &gt; 0) & ((\n    df_nd_grouped['Disaster Type'] == 'Flood') | (df_nd_grouped['Disaster Type'] == 'Storm') | (df_nd_grouped['Disaster Type'] == 'Extreme temperatur'))]\nglobal_disaster_freq = df_nd_filtered.groupby(\n    ['Start Year'])['Frequency'].sum().reset_index()\n\nnd_line_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Start Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n        labelColor='black',\n    )),\n    y=alt.Y('Frequency:Q').axis(\n        title='Häufigkeit',\n        titleAnchor='start',\n        labelColor='black',\n        titleColor='black'\n    ),\n).properties(\n    width=950,\n    height=290,\n    title={\n        \"text\": \"Weltweite Häufigkeit pro Jahr: Stürmen, Extremtemperaturen und Überschwemmungen (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\nnd_line_chart.configure(background=\"rgba(0, 0, 0, 0)\")"
  },
  {
    "objectID": "Dashboard.html#dashboard-konzeption",
    "href": "Dashboard.html#dashboard-konzeption",
    "title": "3  Entwicklung des Dashboards",
    "section": "3.1 Dashboard Konzeption:",
    "text": "3.1 Dashboard Konzeption:\n\nBei der Konzeption des Dashboards orientierten wir uns an folgenden Anforderungen: Interaktivität, Nutzung von mindestens 5 verschiedenen Charttypen, sinnvolle Verwendung von Farben und Legenden sowie unterschiedliche visuelle Aufbereitung der Diagramme.\nDie zugrunde liegende Aussage betonte die Wichtigkeit der Bewältigung des Klimawandels und der Minderung seiner Auswirkungen für den Schutz unseres Planeten, die Sicherheit der Menschheit und die Erhaltung der Lebensgrundlagen für zukünftige Generationen."
  },
  {
    "objectID": "Dashboard.html#dashboard-code",
    "href": "Dashboard.html#dashboard-code",
    "title": "3  Entwicklung des Dashboards",
    "section": "3.2 Dashboard Code:",
    "text": "3.2 Dashboard Code:\n\nNach Abschluss der Konzeptionsphase begann die interessante Phase der Dashboard-Entwicklung.\nFür die Erstellung des Dashboards wurden Streamlit, Altair, das VegaDataset, pandas, numpy und pycountry genutzt.\nDie Ordnerstruktur für das Projekt sieht wie folgt aus:\n\ncharts: Enthält alle erstellten Charts, die im Dashboard zu finden sind. Der Unterordner __pycache__ speichert Zwischenspeicherdateien.\nmedia: Beinhaltet alle Flaggen der Länder im SVG-Format.\nstyles: Enthält das Styling für das Dashboard.\nutils: Teilt sich weiter auf:\n\ndata: Enthält CSV-Dateien, die für die Erstellung der Diagramme notwendig sind.\n__pycache__: Speichert Zwischenspeicherdateien.\n\n\nInnerhalb des charts-Ordners befinden sich alle erstellten Charts, die im Dashboard integriert sind.\nIm media-Ordner sind die SVG-Dateien der Länderflaggen abgelegt.\nDer styles-Ordner enthält das Styling für das Dashboard.\nDer utils-Ordner gliedert sich in weitere Unterordner:\n\ndata: Enthält alle CSV-Dateien, die für die Diagrammerstellung benötigt werden.\n__pycache__: Speichert Zwischenspeicherdateien.\n\nZusätzlich existieren die Dateien helper.py, load_data.py, tweaker.py, nd_type_color.py sowie die beiden Dataprep-Skripte.\nDie Datei analysis.ipynb beinhaltet die Analyse des Projekts. Es gibt außerdem eine .gitignore-Datei, requirements.txt und read.md.\nZuletzt existiert die Datei app.py, die das eigentliche Dashboard darstellt."
  },
  {
    "objectID": "Dashboard.html#dashboard-aufbau",
    "href": "Dashboard.html#dashboard-aufbau",
    "title": "3  Entwicklung des Dashboards",
    "section": "3.3 Dashboard Aufbau",
    "text": "3.3 Dashboard Aufbau\n\nDas Chart “Katastrophenverlauf” wurde genutzt, um zu zeigen, dass die Anzahl von Naturkatastrophen in den letzten Jahren zugenommen hat.\nEbenso wurde der Linechart über den Temperaturverlauf verwendet, um darzustellen, dass die Durchschnittstemperatur auf der Erde seit Jahrzehnten steigt, insbesondere unter anthropologischem Einfluss.\nBeide Charts wurden bewusst am oberen Teil des Dashboards platziert, um dem Betrachter diese Informationen direkt zu Beginn zugänglich zu machen, da daraufhin eine Verbindung der beiden Graphen erfolgt.\nDer nächste Graph kombiniert die beiden Datensätze und zeigt die Anzahl der Naturkatastrophen in Abhängigkeit von der Durchschnittstemperatur. Der Scatterplot verdeutlicht, dass ein Großteil der Verteilung bei höheren Temperaturen liegt und unterstützt somit unsere Aussage.\nAnschließend gewährt ein tieferer Einblick in die Verteilung von Naturkatastrophen bezüglich der Frequenz durch die Barcharts.\nDie Weltkarte soll betonen, dass verschiedene Regionen der Welt unterschiedlich von dieser Entwicklung betroffen sind, insbesondere Länder des Globalen Südens.\nDie Analyse der Temperaturzonen unterstreicht diesen Aspekt.\nDie Interaktivität wurde durch verschiedene Filter umgesetzt, sodass Jahr, Katastrophentyp und Land filterbar sind und die Graphen “Katastrophenverlauf” und “Scatterplot” sich entsprechend ändern.\nDie Abfolge der Graphen soll die Kernaussage verdeutlichen, dass durch ansteigende Temperaturen Naturkatastrophen zunehmen."
  },
  {
    "objectID": "Presentation.html#brainstorming-für-den-leitfaden",
    "href": "Presentation.html#brainstorming-für-den-leitfaden",
    "title": "4  Präsentation",
    "section": "4.1 Brainstorming für den Leitfaden",
    "text": "4.1 Brainstorming für den Leitfaden\nWir haben uns entschieden, unseren Leitfaden für die Präsentation am Storytelling-Ansatz von Satz Nussbaum zu orientieren. Hierbei haben wir uns intensiv mit seinen Thesen auseinandergesetzt und überlegt, wie wir diese in unsere Präsentation integrieren können. Ein entscheidender Schwerpunkt lag dabei auf der Identifizierung des Zielgruppenkontexts. Für uns war klar, dass die Präsentation vor allem für Politiker und Personen aus der Wirtschaft und Industrie konzipiert ist. Da diese Zielgruppe unterschiedliche Kenntnisse zu den Themen Temperaturanstieg und Naturkatastrophen aufweisen kann, war es unser erster Schritt, alle Teilnehmer auf den gleichen Wissensstand zu bringen. Die erste Folie sollte demnach diese Grundlagen darstellen.\nNachdem wir diese Grundidee festgelegt hatten und beide mit der weiteren Verfolgung einverstanden waren, überlegten wir uns drei Möglichkeiten zur weiteren Gestaltung der Präsentation.\n\n4.1.1 Möglichkeit\nSpezialisierung auf ein Land, das stark von Naturkatastrophen betroffen ist, wie zum Beispiel Indien. Hierbei hätten wir anhand von Indien die Anzahl und den Verlauf der Naturkatastrophen dargestellt. Diese Idee wurde verworfen aufgrund unserer begrenzten Datenlage und der Tatsache, dass nur ein kleiner Teil unserer Zielgruppe davon betroffen wäre.\n\n\n4.1.2 Möglichkeit\nVertiefung auf eine bestimmte Katastrophenart, wie beispielsweise Stürme. Auch hier stellte sich das Problem, dass die Zielgruppe, die von dieser Katastrophenart betroffen ist, sehr klein wäre. ### Möglichekit Beleuchtung von mehreren Katastrophenarten und mehreren Ländern. Nachdem die Ideen 1 und 2 verworfen wurden, erschien uns die dritte Möglichkeit als Kompromiss. Dies ermöglichte es uns, einen Großteil unserer Hörerschaft anzusprechen, und zudem war die Datenlage zu unserem Vorteil."
  },
  {
    "objectID": "Presentation.html#ausarbeitung-des-leitfaden",
    "href": "Presentation.html#ausarbeitung-des-leitfaden",
    "title": "4  Präsentation",
    "section": "4.2 Ausarbeitung des Leitfaden",
    "text": "4.2 Ausarbeitung des Leitfaden\nNachdem das Grundkonzept feststand, widmeten wir uns der Auswahl der Diagramme und der Strukturierung der Präsentation. Eine grundlegende Anforderung war es, dass die gewählten Diagramme die Storyline mit ihren Inhalten unterstützen sollten. Zusätzlich wollten wir durch ein konkretes Beispiel unserer Storyline die nötige Tiefe verleihen. Hier wählten wir bewusst den Hurrikan Katrina, da dieser eine der ersten Naturkatastrophen war, welcher uns medial so bekannt war. Hinzu liegt dieser weniger als 20 Jahre zurück, was nochmal unsere Aussage unterstütze."
  },
  {
    "objectID": "Presentation.html",
    "href": "Presentation.html",
    "title": "5  Aufbau der Präsentation",
    "section": "",
    "text": "6 | title: Iowa Electricity\nglobal_avg_temp = df_temp_agg.groupby( ‘Year’)[‘AverageTemperature’].mean().reset_index()\nglobal_avg_temp[‘Year’] = pd.to_datetime( global_avg_temp[‘Year’], format=‘%Y’) global_avg_temp[‘Year’] = global_avg_temp[‘Year’].dt.year\nglobal_avg_temp[‘AverageTemperature’] = global_avg_temp[‘AverageTemperature’].round( 2)\nglob_temp_chart = alt.Chart(global_avg_temp).mark_line(stroke=chart_line_color).encode( x=alt.X(‘Year:O’, axis=alt.Axis( title=’‘, labelAngle=0, values=list(range(global_avg_temp[’Year’].min( ), global_avg_temp[’Year’].max() + 1, 5)), titleAnchor=’start’, labelColor=‘white’, )), y=alt.Y(‘AverageTemperature:Q’, axis=alt.Axis( title=‘Temperatur in °C’, titleAnchor=‘start’, labelColor=‘white’, titleColor=‘white’, ), scale=alt.Scale( domain=[18, 21])), tooltip=[‘Year’, ‘AverageTemperature’] ).properties( width=950, title={ “text”: “Globaler Temperaturverlauf (1920 – 2013)”, “fontSize”: 18, “fontWeight”: 300, “anchor”: ‘start’, “color”: chart_title_color, }, )\nglob_temp_regression = glob_temp_chart.transform_regression( ‘Year’, ‘AverageTemperature’, method=‘linear’ ).mark_line(color=chart_marker_color)\ntext_at_end = alt.Chart(pd.DataFrame({‘end_position’: [19.8]})).mark_text( align=‘left’, baseline=‘middle’, dx=360, dy=0, color=chart_marker_color, text=‘Anstieg: 0.8 °C’, fontWeight=800, fontSize=14 ).encode( y=‘end_position:Q’ )\nglob_temp_chart.configure(background=“rgba(0, 0, 0, 0)”)\nZiel: - durch den Linechart bietet sich ein gute Möglichkeit den Trend der zunehmenden Häufigkeit darzustellen.\nimport altair as alt\nimport pandas as pd\nfrom vega_datasets import data\nalt.data_transformers.disable_max_rows()\n\ndf_nd = pd.read_csv('./data/InternationalDisaster_cleaned.csv')\ndf_nd_full = pd.read_csv('data/InternationalDisaster.csv')\ndf_nd_grouped = pd.read_csv('data/InternationalDisaster_grouped.csv')\ndf_temp = pd.read_csv('data/GlobalLandTemperatur_cleaned.csv')\ndf_temp_agg = pd.read_csv('data/GlobalLandTemperatur_aggregated.csv')\ndf_temp_nd_combined = pd.read_csv('data/df_temp_nd_combined.csv')\ncountries = alt.topo_feature(data.world_110m.url, 'countries')\n\nchart_title_color = \"#d6d6d6\"\nchart_line_color = \"#3A86FF\"\nchart_marker_color = \"#e00707\"\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\nglobal_avg_temp = df_temp_agg.groupby(\n    'Year')['AverageTemperature'].mean().reset_index()\n\nglobal_avg_temp['Year'] = pd.to_datetime(\n    global_avg_temp['Year'], format='%Y')\nglobal_avg_temp['Year'] = global_avg_temp['Year'].dt.year\n\nglobal_avg_temp['AverageTemperature'] = global_avg_temp['AverageTemperature'].round(\n    2)\nnd_type_filter_flood = alt.FieldEqualPredicate(\n    field='Disaster Type', equal='Flood')\n\nglobal_disaster_freq = df_nd_grouped.groupby(['Start Year', 'Disaster Type'])[\n    'Frequency'].sum().reset_index()\n\nnd_flood_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Start Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        labelColor=\"white\",\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n    )),\n    y=alt.Y('Frequency:Q').axis(\n        title='Häufigkeit',\n        titleAnchor='start',\n        labelColor=\"white\",\n        titleColor=\"white\"\n    ),\n    color=alt.Color('Disaster Type:N',\n                    legend=None),\n    tooltip=['Start Year', 'Frequency', 'Disaster Type']\n).properties(\n    width=950,\n    height=250,\n    title={\n        \"text\": \"Globale Häufigkeiten: Überschwemmungen (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n).transform_filter(\n    nd_type_filter_flood\n)\n\nnd_flood_chart_text_point_2006 = alt.Chart(global_disaster_freq[(global_disaster_freq['Start Year'] == 2006) & (global_disaster_freq['Disaster Type'] == 'Flood')]).mark_point(color=chart_marker_color, size=300, strokeWidth=3).encode(\n    x='Start Year:O',\n    y='Frequency:Q',\n    text=alt.Text('Start Year:N', format='d')\n)\n\nnd_flood_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n(nd_flood_chart + nd_flood_chart_text_point_2006).configure(background=\"rgba(0, 0, 0, 0)\")\nZiel: - der Linechart veranschaulicht sehr gut, wie Häufigkeit in den letzten 3 Jahrzehneten gestiegen ist, deswegen haben wir uns hier auch für ein Linechart entschieden - der Rotepunkt ist leicht zu erkennen und zeigt dem Zuschauer direkt auf welche Sequenz wir uns gerade beziehen\nnd_type_filter_storm = alt.FieldEqualPredicate( field=‘Disaster Type’, equal=‘Storm’)\nglobal_disaster_freq = df_nd_grouped.groupby([‘Start Year’, ‘Disaster Type’])[ ‘Frequency’].sum().reset_index()\nnd_storm_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode( x=alt.X(‘Start Year:O’, axis=alt.Axis( title=’‘, labelColor=“white”, labelAngle=0, values=list(range(global_avg_temp[’Year’].min( ), global_avg_temp[’Year’].max() + 1, 5)), )), y=alt.Y(’Frequency:Q’).axis( title=‘Häufigkeit’, labelColor=“white”, titleAnchor=‘start’, titleColor=“white” ), color=alt.Color(‘Disaster Type:N’, legend=None), tooltip=[‘Start Year’, ‘Frequency’, ‘Disaster Type’] ).properties( width=950, height=250, title={ “text”: “Globale Häufigkeiten: Stürme (1920 – 2013)”, “fontSize”: 18, “fontWeight”: 300, “anchor”: ‘start’, “color”: chart_title_color, }, ).transform_filter( nd_type_filter_storm )\nnd_storm_chart_text_point_1990 = alt.Chart(global_disaster_freq[(global_disaster_freq[‘Start Year’] == 1990) & (global_disaster_freq[‘Disaster Type’] == ‘Storm’)]).mark_point(color=chart_marker_color, size=300, strokeWidth=3).encode( x=‘Start Year:O’, y=‘Frequency:Q’, text=alt.Text(‘Start Year:N’, format=‘d’) )\nnd_storm_chart.configure(background=“rgba(0, 0, 0, 0)”) (nd_storm_chart + nd_storm_chart_text_point_1990).configure(background=“rgba(0, 0, 0, 0)”)\n:::\n(nd_extr_temp_chart +\n nd_extr_temp_chart_text_point_2012).configure(background=\"rgba(0, 0, 0, 0)\")\nZiel: - auch hier ist wieder ein Linechart zu erkennen, damit klar der Anstieg Häufigkeit zu erkennen ist\nimport pandas as pd\nimport altair as alt\nfrom vega_datasets import data\n\nalt.data_transformers.disable_max_rows()\n\ndf_nd = pd.read_csv('./data/InternationalDisaster_cleaned.csv')\ndf_nd_full = pd.read_csv('data/InternationalDisaster.csv')\ndf_nd_grouped = pd.read_csv('data/InternationalDisaster_grouped.csv')\ndf_temp = pd.read_csv('data/GlobalLandTemperatur_cleaned.csv')\ndf_temp_agg = pd.read_csv('data/GlobalLandTemperatur_aggregated.csv')\ndf_temp_nd_combined = pd.read_csv('data/df_temp_nd_combined.csv')\ncountries = alt.topo_feature(data.world_110m.url, 'countries')\n\nchart_title_color = \"#d6d6d6\"\nchart_line_color = \"#3A86FF\"\nchart_marker_color = \"#e00707\"\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\n\nnd_type_colors_red = {\n    'Extreme temperature': nd_type_colors['Extreme temperature'],\n    'Storm': nd_type_colors['Storm'],\n    'Flood': nd_type_colors['Flood']\n}\n\n# | title: Iowa Electricity\nglobal_avg_temp = df_temp_agg.groupby(\n    'Year')['AverageTemperature'].mean().reset_index()\n\nglobal_avg_temp['Year'] = pd.to_datetime(\n    global_avg_temp['Year'], format='%Y')\nglobal_avg_temp['Year'] = global_avg_temp['Year'].dt.year\n\nglobal_avg_temp['AverageTemperature'] = global_avg_temp['AverageTemperature'].round(\n    2)\nglobal_disaster_freq = df_temp_nd_combined.groupby(['AverageTemperature', 'Disaster Type'])[\n    'Frequency'].sum().reset_index()\n\nglobal_disaster_freq_filtered = global_disaster_freq[(global_disaster_freq['Disaster Type'] == 'Flood') | (\n    global_disaster_freq['Disaster Type'] == 'Storm') | (global_disaster_freq['Disaster Type'] == 'Extreme temperature')]\n\nnd_temp_scatter = alt.Chart(global_disaster_freq_filtered).mark_circle().encode(\n    x=alt.X('AverageTemperature:O', title='Durchschnittstemperatur in °C ',\n            axis=alt.Axis(format=\".3f\",\n                          titleAnchor='start',\n                          titleColor=\"white\",\n                          labelColor=\"white\"\n                          )),\n    y=alt.Y('Frequency:Q', axis=alt.Axis(\n        title='Häufigkeit',\n        titleAnchor='start',\n        titleColor=\"white\",\n        labelColor=\"white\"\n    )),\n    color=alt.Color('Disaster Type',\n                    title='Katastrophentyp',\n                    scale=alt.Scale(domain=list(nd_type_colors_red.keys()),\n                                    range=list(nd_type_colors_red.values())),\n                    legend=alt.Legend(labelColor=\"white\", titleColor=\"white\")),\n    tooltip=['AverageTemperature', 'Frequency', 'Disaster Type']\n).properties(\n    width=850,\n    height=400,\n    title={\n        \"text\": \"Häufigkeit der Katastrophentypen im Zusammenhang mit der Temperatur\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\n\n\nnd_temp_scatter.configure(background=\"rgba(0, 0, 0, 0)\")\nZiel: - Präsentation einer Schlüsselfolie: Zusammenhang zwischen Temperatur und Naturkatastrophen. - Ein Scatterplot wird verwendet, um den Einfluss steigender Temperaturen auf die Häufigkeit von Naturkatastrophen klar zu veranschaulichen. - wir haben uns auch direkt für diese Folie entschieden, da wir uns damit direkt auf unsere Leitfrage wieder beziehen\nZiel: - Hervorheben der variierenden Auswirkungen in unterschiedlichen Temperaturzonen. - Rückblickend auf eine der Haupterkenntnisse unserer Untersuchung reflektieren - soll zum Wiederaufruf unserer Leitfrage führen"
  },
  {
    "objectID": "Presentation.html#inhaltsangabe",
    "href": "Presentation.html#inhaltsangabe",
    "title": "5  Aufbau der Präsentation",
    "section": "5.1 Inhaltsangabe",
    "text": "5.1 Inhaltsangabe\n\nBeispiel Hurrikan Katrina\nLeitfrage\nDatenquellen\nGlobaler Temperaturverlauf\nBetrachtung von Naturkatastrophen\nZusammenhang zwischen Temperatur und Naturkatastrophen\nFazit\nHandlungsempfehlungen\nAnmerkung\n\nNachdem der Inhaltsangabe, erfolgt eine kurze Erleuterung zu unseren Quellen. Hier kann jedoch einfach auf Kapitel 2 verwiesen werden.\n## Die Erklärung zu den präsentierten Diagrammen wird im Folgenden bereitgestellt\nimport pandas as pd import altair as alt from vega_datasets import data\nalt.data_transformers.disable_max_rows()\ndf_nd = pd.read_csv(‘./data/InternationalDisaster_cleaned.csv’) df_nd_full = pd.read_csv(‘data/InternationalDisaster.csv’) df_nd_grouped = pd.read_csv(‘data/InternationalDisaster_grouped.csv’) df_temp = pd.read_csv(‘data/GlobalLandTemperatur_cleaned.csv’) df_temp_agg = pd.read_csv(‘data/GlobalLandTemperatur_aggregated.csv’) df_temp_nd_combined = pd.read_csv(‘data/df_temp_nd_combined.csv’) countries = alt.topo_feature(data.world_110m.url, ‘countries’)\nchart_title_color = “#d6d6d6” chart_line_color = “#3A86FF” chart_marker_color = “#e00707”\nnd_type_colors = { ‘Drought’: ‘#FFBC42’, ‘Earthquake’: ‘#b55a1d’, ‘Epidemic’: ‘#06D6A0’, ‘Extreme temperature’: ‘#EF476F’, ‘Flood’: ‘#3A86FF’, ‘Fog’: ‘#118AB2’, ‘Impact’: ‘#16225c’, ‘Infestation’: ‘#2f9e29’, ‘Mass movement (dry)’: ‘#78259c’, ‘Mass movement (wet)’: ‘#512599’, ‘Storm’: ‘#287fa1’, ‘Volcanic activity’: ‘#ab4c29’, ‘Wildfire’: ‘#b52222’ }\nnd_type_colors = { ‘Drought’: ‘#FFBC42’, ‘Earthquake’: ‘#b55a1d’, ‘Epidemic’: ‘#06D6A0’, ‘Extreme temperature’: ‘#EF476F’, ‘Flood’: ‘#3A86FF’, ‘Fog’: ‘#118AB2’, ‘Impact’: ‘#16225c’, ‘Infestation’: ‘#2f9e29’, ‘Mass movement (dry)’: ‘#78259c’, ‘Mass movement (wet)’: ‘#512599’, ‘Storm’: ‘#287fa1’, ‘Volcanic activity’: ‘#ab4c29’, ‘Wildfire’: ‘#b52222’ }\nnd_type_colors_red = { ‘Extreme temperature’: nd_type_colors[‘Extreme temperature’], ‘Storm’: nd_type_colors[‘Storm’], ‘Flood’: nd_type_colors[‘Flood’] }"
  },
  {
    "objectID": "Presentation.html#abschluss-der-präsentation",
    "href": "Presentation.html#abschluss-der-präsentation",
    "title": "5  Aufbau der Präsentation",
    "section": "5.3 Abschluss der Präsentation",
    "text": "5.3 Abschluss der Präsentation\nNach der umfassenden Präsentation sämtlicher Grafiken und Diagramme beziehen wir uns nun unmittelbar auf unsere Leitfrage und formulieren ein abschließendes Fazit.  Dieses Fazit basiert auf den gewonnenen Erkenntnissen aus den vorliegenden Datensätzen. Nach der Zusammenfassung der Schlussfolgerungen wenden wir uns erneut an unser Publikum und geben klare Handlungsempfehlungen. Diese Empfehlungen sind prägnant und verständlich in Stichworten formuliert, um eine unmissverständliche Übermittlung an die Zuhörerschaft zu gewährleisten.  Es sei anzumerken, dass die Handlungsempfehlungen bewusst in kurzer und prägnanter Form gehalten sind, um eine klare Verständlichkeit für die Zuhörer zu gewährleisten.  Zum Abschluss erfolgt eine kurze Anmerkung, welche auf die begrenzte Zeit der Präsentation und die nicht vollständige Erschöpfung aller Projektdetails hinweist."
  },
  {
    "objectID": "Presentation.html#inhaltsangabe-für-die-präsentation",
    "href": "Presentation.html#inhaltsangabe-für-die-präsentation",
    "title": "5  Aufbau der Präsentation",
    "section": "5.1 Inhaltsangabe für die Präsentation",
    "text": "5.1 Inhaltsangabe für die Präsentation\n\nBeispiel Hurrikan Katrina\nLeitfrage\nDatenquellen\nGlobaler Temperaturverlauf\nBetrachtung von Naturkatastrophen\nZusammenhang zwischen Temperatur und Naturkatastrophen\nFazit\nHandlungsempfehlungen\nAnmerkung Nachdem der Inhaltsangabe, erfolgt eine kurze Erläuterung zu unseren Quellen. Hier kann jedoch einfach auf Kapitel 2 verwiesen werden."
  },
  {
    "objectID": "Presentation.html#die-erklärung-zu-den-präsentierten-diagrammen-wird-im-folgenden-bereitgestellt",
    "href": "Presentation.html#die-erklärung-zu-den-präsentierten-diagrammen-wird-im-folgenden-bereitgestellt",
    "title": "5  Aufbau der Präsentation",
    "section": "5.2 Die Erklärung zu den präsentierten Diagrammen wird im Folgenden bereitgestellt",
    "text": "5.2 Die Erklärung zu den präsentierten Diagrammen wird im Folgenden bereitgestellt\n\nimport pandas as pd\nimport altair as alt\nfrom vega_datasets import data\n\nalt.data_transformers.disable_max_rows()\n\ndf_nd = pd.read_csv('./data/InternationalDisaster_cleaned.csv')\ndf_nd_full = pd.read_csv('data/InternationalDisaster.csv')\ndf_nd_grouped = pd.read_csv('data/InternationalDisaster_grouped.csv')\ndf_temp = pd.read_csv('data/GlobalLandTemperatur_cleaned.csv')\ndf_temp_agg = pd.read_csv('data/GlobalLandTemperatur_aggregated.csv')\ndf_temp_nd_combined = pd.read_csv('data/df_temp_nd_combined.csv')\ncountries = alt.topo_feature(data.world_110m.url, 'countries')\n\nchart_title_color = \"#d6d6d6\"\nchart_line_color = \"#3A86FF\"\nchart_marker_color = \"#e00707\"\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\n\nnd_type_colors_red = {\n    'Extreme temperature': nd_type_colors['Extreme temperature'],\n    'Storm': nd_type_colors['Storm'],\n    'Flood': nd_type_colors['Flood']\n}\n\n# | title: Iowa Electricity\nglobal_avg_temp = df_temp_agg.groupby(\n    'Year')['AverageTemperature'].mean().reset_index()\n\nglobal_avg_temp['Year'] = pd.to_datetime(\n    global_avg_temp['Year'], format='%Y')\nglobal_avg_temp['Year'] = global_avg_temp['Year'].dt.year\n\nglobal_avg_temp['AverageTemperature'] = global_avg_temp['AverageTemperature'].round(\n    2)\n\nglob_temp_chart = alt.Chart(global_avg_temp).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n        titleAnchor='start',\n        labelColor='white',\n    )),\n    y=alt.Y('AverageTemperature:Q', axis=alt.Axis(\n        title='Temperatur in °C',\n        titleAnchor='start',\n        labelColor='white',\n        titleColor='white',\n    ), scale=alt.Scale(\n        domain=[18, 21])),\n    tooltip=['Year', 'AverageTemperature']\n).properties(\n    width=950,\n    title={\n        \"text\": \"Globaler Temperaturverlauf (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\n\n\nglob_temp_regression = glob_temp_chart.transform_regression(\n    'Year', 'AverageTemperature', method='linear'\n).mark_line(color=chart_marker_color)\n\ntext_at_end = alt.Chart(pd.DataFrame({'end_position': [19.8]})).mark_text(\n    align='left',\n    baseline='middle',\n    dx=360,\n    dy=0,\n    color=chart_marker_color,\n    text='Anstieg: 0.8 °C',\n    fontWeight=800,\n    fontSize=14\n).encode(\n    y='end_position:Q'\n)\n\n\nglob_temp_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel: - Klarer und eindeutiger Visualisierung des Temperaturanstiegs um 0,8 Grad\n### Globale Naturkatastrophen\n\ndf_nd_filtered = df_nd_grouped[(df_nd_grouped['Frequency'] &gt; 0) & ((\n    df_nd_grouped['Disaster Type'] == 'Flood') | (df_nd_grouped['Disaster Type'] == 'Storm') | (df_nd_grouped['Disaster Type'] == 'Extreme temperatur'))]\nglobal_disaster_freq = df_nd_filtered.groupby(\n    ['Start Year'])['Frequency'].sum().reset_index()\n\nnd_line_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Start Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n        labelColor='white',\n    )),\n    y=alt.Y('Frequency:Q').axis(\n        title='Häufigkeit',\n        titleAnchor='start',\n        labelColor='white',\n        titleColor='white'\n    ),\n).properties(\n    width=950,\n    height=290,\n    title={\n        \"text\": \"Weltweite Häufigkeit pro Jahr: Stürmen, Extremtemperaturen und Überschwemmungen (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\nnd_line_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel: - durch den Linechart bietet sich ein gute Möglichkeit den Trend der zunehmenden Häufigkeit darzustellen.\n\nnd_type_filter_flood = alt.FieldEqualPredicate(\n    field='Disaster Type', equal='Flood')\n\nglobal_disaster_freq = df_nd_grouped.groupby(['Start Year', 'Disaster Type'])[\n    'Frequency'].sum().reset_index()\n\nnd_flood_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Start Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        labelColor=\"white\",\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n    )),\n    y=alt.Y('Frequency:Q').axis(\n        title='Häufigkeit',\n        titleAnchor='start',\n        labelColor=\"white\",\n        titleColor=\"white\"\n    ),\n    color=alt.Color('Disaster Type:N',\n                    legend=None),\n    tooltip=['Start Year', 'Frequency', 'Disaster Type']\n).properties(\n    width=950,\n    height=250,\n    title={\n        \"text\": \"Globale Häufigkeiten: Überschwemmungen (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n).transform_filter(\n    nd_type_filter_flood\n)\n\nnd_flood_chart_text_point_2006 = alt.Chart(global_disaster_freq[(global_disaster_freq['Start Year'] == 2006) & (global_disaster_freq['Disaster Type'] == 'Flood')]).mark_point(color=chart_marker_color, size=300, strokeWidth=3).encode(\n    x='Start Year:O',\n    y='Frequency:Q',\n    text=alt.Text('Start Year:N', format='d')\n)\n\nnd_flood_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\n\n(nd_flood_chart + nd_flood_chart_text_point_2006).configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel: - der Linechart veranschaulicht sehr gut, wie Häufigkeit in den letzten 3 Jahrzehneten gestiegen ist, deswegen haben wir uns hier auch für ein Linechart entschieden - der Rotepunkt ist leicht zu erkennen und zeigt dem Zuschauer direkt auf welche Sequenz wir uns gerade beziehen\n\nnd_type_filter_storm = alt.FieldEqualPredicate(\n    field='Disaster Type', equal='Storm')\n\nglobal_disaster_freq = df_nd_grouped.groupby(['Start Year', 'Disaster Type'])[\n    'Frequency'].sum().reset_index()\n\nnd_storm_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Start Year:O', axis=alt.Axis(\n        title='',\n        labelColor=\"white\",\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n    )),\n    y=alt.Y('Frequency:Q').axis(\n        title='Häufigkeit',\n        labelColor=\"white\",\n        titleAnchor='start',\n        titleColor=\"white\"\n    ),\n    color=alt.Color('Disaster Type:N',\n                    legend=None),\n    tooltip=['Start Year', 'Frequency', 'Disaster Type']\n).properties(\n    width=950,\n    height=250,\n    title={\n        \"text\": \"Globale Häufigkeiten: Stürme (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n).transform_filter(\n    nd_type_filter_storm\n)\n\nnd_storm_chart_text_point_1990 = alt.Chart(global_disaster_freq[(global_disaster_freq['Start Year'] == 1990) & (global_disaster_freq['Disaster Type'] == 'Storm')]).mark_point(color=chart_marker_color, size=300, strokeWidth=3).encode(\n    x='Start Year:O',\n    y='Frequency:Q',\n    text=alt.Text('Start Year:N', format='d')\n)\n\nnd_storm_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n(nd_storm_chart + nd_storm_chart_text_point_1990).configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel: - Der Linechart illustriertauch hier überzeugend den Anstieg der Häufigkeit in den letzten drei Jahrzehnten. Aus diesem Grund haben wir uns für die Verwendung eines Linecharts entschieden.\n\nDer rote Punkt ist gut erkennbar und zeigt dem Zuschauer sofort, auf welche Sequenz wir uns aktuell beziehen.\n\n\nnd_type_filter_extr_temp = alt.FieldEqualPredicate(\n    field='Disaster Type', equal='Extreme temperature')\n\nglobal_disaster_freq = df_nd_grouped.groupby(['Start Year', 'Disaster Type'])[\n    'Frequency'].sum().reset_index()\n\nnd_extr_temp_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Start Year:O', axis=alt.Axis(\n        title='',\n        labelColor=\"white\",\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n    )),\n    y=alt.Y('Frequency:Q').axis(\n        title='Häufigkeit',\n        labelColor=\"white\",\n        titleAnchor='start',\n        titleColor=\"white\"\n    ),\n    color=alt.Color('Disaster Type:N',\n                    legend=None),\n    tooltip=['Start Year', 'Frequency', 'Disaster Type']\n).properties(\n    width=950,\n    height=250,\n    title={\n        \"text\": \"Globale Häufigkeiten: Extremtemperaturen (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n).transform_filter(\n    nd_type_filter_extr_temp\n)\n\nnd_extr_temp_chart_text_point_2012 = alt.Chart(global_disaster_freq[(global_disaster_freq['Start Year'] == 2012) & (global_disaster_freq['Disaster Type'] == 'Extreme temperature')]).mark_point(color='red', size=300, strokeWidth=3).encode(\n    x='Start Year:O',\n    y='Frequency:Q',\n    text=alt.Text('Start Year:N', format='d')\n)\n\nnd_extr_temp_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\n\n(nd_extr_temp_chart +\n nd_extr_temp_chart_text_point_2012).configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel: - auch hier ist wieder ein Linechart zu erkennen, damit klar der Anstieg Häufigkeit zu erkennen ist\n\nglobal_disaster_freq = df_temp_nd_combined.groupby(['AverageTemperature', 'Disaster Type'])[\n    'Frequency'].sum().reset_index()\n\nglobal_disaster_freq_filtered = global_disaster_freq[(global_disaster_freq['Disaster Type'] == 'Flood') | (\n    global_disaster_freq['Disaster Type'] == 'Storm') | (global_disaster_freq['Disaster Type'] == 'Extreme temperature')]\n\nnd_temp_scatter = alt.Chart(global_disaster_freq_filtered).mark_circle().encode(\n    x=alt.X('AverageTemperature:O', title='Durchschnittstemperatur in °C ',\n            axis=alt.Axis(format=\".3f\",\n                          titleAnchor='start',\n                          titleColor=\"white\",\n                          labelColor=\"white\"\n                          )),\n    y=alt.Y('Frequency:Q', axis=alt.Axis(\n        title='Häufigkeit',\n        titleAnchor='start',\n        titleColor=\"white\",\n        labelColor=\"white\"\n    )),\n    color=alt.Color('Disaster Type',\n                    title='Katastrophentyp',\n                    scale=alt.Scale(domain=list(nd_type_colors_red.keys()),\n                                    range=list(nd_type_colors_red.values())),\n                    legend=alt.Legend(labelColor=\"white\", titleColor=\"white\")),\n    tooltip=['AverageTemperature', 'Frequency', 'Disaster Type']\n).properties(\n    width=850,\n    height=400,\n    title={\n        \"text\": \"Häufigkeit der Katastrophentypen im Zusammenhang mit der Temperatur\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\n\n\nnd_temp_scatter.configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel: - Präsentation einer Schlüsselfolie: Zusammenhang zwischen Temperatur und Naturkatastrophen. - Ein Scatterplot wird verwendet, um den Einfluss steigender Temperaturen auf die Häufigkeit von Naturkatastrophen klar zu veranschaulichen. - wir haben uns auch direkt für diese Folie entschieden, da wir uns damit direkt auf unsere Leitfrage wieder beziehen\n\n    \n        \n            20 bis 30 °C\n            Katastrophen\n        \n        \n        \n            Heiß\n            4397\n        \n    \n    \n        \n            10 bis 20 °C\n            Katastrophen\n        \n        \n        \n            Warm\n            1462\n        \n    \n    \n        \n            0 bis 10 °C\n            Katastrophen\n        \n        \n        \n            Normal\n            1033\n        \n    \n    \n        \n            -10 bis 0 °C\n            Katastrophen\n        \n        \n        \n            Kalt\n            99\n        \n    \n    \n        \n            -20 bis -10 °C\n            Katastrophen\n        \n        \n        \n            Sehr kalt\n            13\n        \n    \n\nZiel: - Hervorheben der variierenden Auswirkungen in unterschiedlichen Temperaturzonen. - Rückblickend auf eine der Haupterkenntnisse unserer Untersuchung reflektieren - soll zum Wiederaufruf unserer Leitfrage führen"
  },
  {
    "objectID": "Presentation.html#die-erklärung-zu-den-präsentierten-diagrammen",
    "href": "Presentation.html#die-erklärung-zu-den-präsentierten-diagrammen",
    "title": "5  Aufbau der Präsentation",
    "section": "5.2 Die Erklärung zu den präsentierten Diagrammen",
    "text": "5.2 Die Erklärung zu den präsentierten Diagrammen\n\nimport pandas as pd\nimport altair as alt\nfrom vega_datasets import data\n\nalt.data_transformers.disable_max_rows()\n\ndf_nd = pd.read_csv('./data/InternationalDisaster_cleaned.csv')\ndf_nd_full = pd.read_csv('data/InternationalDisaster.csv')\ndf_nd_grouped = pd.read_csv('data/InternationalDisaster_grouped.csv')\ndf_temp = pd.read_csv('data/GlobalLandTemperatur_cleaned.csv')\ndf_temp_agg = pd.read_csv('data/GlobalLandTemperatur_aggregated.csv')\ndf_temp_nd_combined = pd.read_csv('data/df_temp_nd_combined.csv')\ncountries = alt.topo_feature(data.world_110m.url, 'countries')\n\nchart_title_color = \"#d6d6d6\"\nchart_line_color = \"#3A86FF\"\nchart_marker_color = \"#e00707\"\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\n\nnd_type_colors_red = {\n    'Extreme temperature': nd_type_colors['Extreme temperature'],\n    'Storm': nd_type_colors['Storm'],\n    'Flood': nd_type_colors['Flood']\n}\n\n# | title: Iowa Electricity\nglobal_avg_temp = df_temp_agg.groupby(\n    'Year')['AverageTemperature'].mean().reset_index()\n\nglobal_avg_temp['Year'] = pd.to_datetime(\n    global_avg_temp['Year'], format='%Y')\nglobal_avg_temp['Year'] = global_avg_temp['Year'].dt.year\n\nglobal_avg_temp['AverageTemperature'] = global_avg_temp['AverageTemperature'].round(\n    2)\n\nglob_temp_chart = alt.Chart(global_avg_temp).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n        titleAnchor='start',\n        labelColor='white',\n    )),\n    y=alt.Y('AverageTemperature:Q', axis=alt.Axis(\n        title='Temperatur in °C',\n        titleAnchor='start',\n        labelColor='white',\n        titleColor='white',\n    ), scale=alt.Scale(\n        domain=[18, 21])),\n    tooltip=['Year', 'AverageTemperature']\n).properties(\n    width=950,\n    title={\n        \"text\": \"Globaler Temperaturverlauf (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\n\n\nglob_temp_regression = glob_temp_chart.transform_regression(\n    'Year', 'AverageTemperature', method='linear'\n).mark_line(color=chart_marker_color)\n\ntext_at_end = alt.Chart(pd.DataFrame({'end_position': [19.8]})).mark_text(\n    align='left',\n    baseline='middle',\n    dx=360,\n    dy=0,\n    color=chart_marker_color,\n    text='Anstieg: 0.8 °C',\n    fontWeight=800,\n    fontSize=14\n).encode(\n    y='end_position:Q'\n)\n\n\nglob_temp_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel: - Klarer und eindeutiger Visualisierung des Temperaturanstiegs um 0,8 Grad\n\n5.2.1 Globale Naturkatastrophen\n\ndf_nd_filtered = df_nd_grouped[(df_nd_grouped['Frequency'] &gt; 0) & ((\n    df_nd_grouped['Disaster Type'] == 'Flood') | (df_nd_grouped['Disaster Type'] == 'Storm') | (df_nd_grouped['Disaster Type'] == 'Extreme temperatur'))]\nglobal_disaster_freq = df_nd_filtered.groupby(\n    ['Start Year'])['Frequency'].sum().reset_index()\n\nnd_line_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Start Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n        labelColor='white',\n    )),\n    y=alt.Y('Frequency:Q').axis(\n        title='Häufigkeit',\n        titleAnchor='start',\n        labelColor='white',\n        titleColor='white'\n    ),\n).properties(\n    width=950,\n    height=290,\n    title={\n        \"text\": \"Weltweite Häufigkeit pro Jahr: Stürmen, Extremtemperaturen und Überschwemmungen (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\nnd_line_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel: - durch den Linechart bietet sich ein gute Möglichkeit den Trend der zunehmenden Häufigkeit darzustellen.\n\nnd_type_filter_flood = alt.FieldEqualPredicate(\n    field='Disaster Type', equal='Flood')\n\nglobal_disaster_freq = df_nd_grouped.groupby(['Start Year', 'Disaster Type'])[\n    'Frequency'].sum().reset_index()\n\nnd_flood_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Start Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        labelColor=\"white\",\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n    )),\n    y=alt.Y('Frequency:Q').axis(\n        title='Häufigkeit',\n        titleAnchor='start',\n        labelColor=\"white\",\n        titleColor=\"white\"\n    ),\n    color=alt.Color('Disaster Type:N',\n                    legend=None),\n    tooltip=['Start Year', 'Frequency', 'Disaster Type']\n).properties(\n    width=950,\n    height=250,\n    title={\n        \"text\": \"Globale Häufigkeiten: Überschwemmungen (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n).transform_filter(\n    nd_type_filter_flood\n)\n\nnd_flood_chart_text_point_2006 = alt.Chart(global_disaster_freq[(global_disaster_freq['Start Year'] == 2006) & (global_disaster_freq['Disaster Type'] == 'Flood')]).mark_point(color=chart_marker_color, size=300, strokeWidth=3).encode(\n    x='Start Year:O',\n    y='Frequency:Q',\n    text=alt.Text('Start Year:N', format='d')\n)\n\nnd_flood_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\n\n(nd_flood_chart + nd_flood_chart_text_point_2006).configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel: - der Linechart veranschaulicht sehr gut, wie Häufigkeit in den letzten 3 Jahrzehneten gestiegen ist, deswegen haben wir uns hier auch für ein Linechart entschieden - der Rotepunkt ist leicht zu erkennen und zeigt dem Zuschauer direkt auf welche Sequenz wir uns gerade beziehen\n\nnd_type_filter_storm = alt.FieldEqualPredicate(\n    field='Disaster Type', equal='Storm')\n\nglobal_disaster_freq = df_nd_grouped.groupby(['Start Year', 'Disaster Type'])[\n    'Frequency'].sum().reset_index()\n\nnd_storm_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Start Year:O', axis=alt.Axis(\n        title='',\n        labelColor=\"white\",\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n    )),\n    y=alt.Y('Frequency:Q').axis(\n        title='Häufigkeit',\n        labelColor=\"white\",\n        titleAnchor='start',\n        titleColor=\"white\"\n    ),\n    color=alt.Color('Disaster Type:N',\n                    legend=None),\n    tooltip=['Start Year', 'Frequency', 'Disaster Type']\n).properties(\n    width=950,\n    height=250,\n    title={\n        \"text\": \"Globale Häufigkeiten: Stürme (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n).transform_filter(\n    nd_type_filter_storm\n)\n\nnd_storm_chart_text_point_1990 = alt.Chart(global_disaster_freq[(global_disaster_freq['Start Year'] == 1990) & (global_disaster_freq['Disaster Type'] == 'Storm')]).mark_point(color=chart_marker_color, size=300, strokeWidth=3).encode(\n    x='Start Year:O',\n    y='Frequency:Q',\n    text=alt.Text('Start Year:N', format='d')\n)\n\nnd_storm_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n(nd_storm_chart + nd_storm_chart_text_point_1990).configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel: - Der Linechart illustriertauch hier überzeugend den Anstieg der Häufigkeit in den letzten drei Jahrzehnten. Aus diesem Grund haben wir uns für die Verwendung eines Linecharts entschieden.\n\nDer rote Punkt ist gut erkennbar und zeigt dem Zuschauer sofort, auf welche Sequenz wir uns aktuell beziehen.\n\n\nnd_type_filter_extr_temp = alt.FieldEqualPredicate(\n    field='Disaster Type', equal='Extreme temperature')\n\nglobal_disaster_freq = df_nd_grouped.groupby(['Start Year', 'Disaster Type'])[\n    'Frequency'].sum().reset_index()\n\nnd_extr_temp_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Start Year:O', axis=alt.Axis(\n        title='',\n        labelColor=\"white\",\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n    )),\n    y=alt.Y('Frequency:Q').axis(\n        title='Häufigkeit',\n        labelColor=\"white\",\n        titleAnchor='start',\n        titleColor=\"white\"\n    ),\n    color=alt.Color('Disaster Type:N',\n                    legend=None),\n    tooltip=['Start Year', 'Frequency', 'Disaster Type']\n).properties(\n    width=950,\n    height=250,\n    title={\n        \"text\": \"Globale Häufigkeiten: Extremtemperaturen (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n).transform_filter(\n    nd_type_filter_extr_temp\n)\n\nnd_extr_temp_chart_text_point_2012 = alt.Chart(global_disaster_freq[(global_disaster_freq['Start Year'] == 2012) & (global_disaster_freq['Disaster Type'] == 'Extreme temperature')]).mark_point(color='red', size=300, strokeWidth=3).encode(\n    x='Start Year:O',\n    y='Frequency:Q',\n    text=alt.Text('Start Year:N', format='d')\n)\n\nnd_extr_temp_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\n\n(nd_extr_temp_chart +\n nd_extr_temp_chart_text_point_2012).configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel: - auch hier ist wieder ein Linechart zu erkennen, damit klar der Anstieg Häufigkeit zu erkennen ist\n\nglobal_disaster_freq = df_temp_nd_combined.groupby(['AverageTemperature', 'Disaster Type'])[\n    'Frequency'].sum().reset_index()\n\nglobal_disaster_freq_filtered = global_disaster_freq[(global_disaster_freq['Disaster Type'] == 'Flood') | (\n    global_disaster_freq['Disaster Type'] == 'Storm') | (global_disaster_freq['Disaster Type'] == 'Extreme temperature')]\n\nnd_temp_scatter = alt.Chart(global_disaster_freq_filtered).mark_circle().encode(\n    x=alt.X('AverageTemperature:O', title='Durchschnittstemperatur in °C ',\n            axis=alt.Axis(format=\".3f\",\n                          titleAnchor='start',\n                          titleColor=\"white\",\n                          labelColor=\"white\"\n                          )),\n    y=alt.Y('Frequency:Q', axis=alt.Axis(\n        title='Häufigkeit',\n        titleAnchor='start',\n        titleColor=\"white\",\n        labelColor=\"white\"\n    )),\n    color=alt.Color('Disaster Type',\n                    title='Katastrophentyp',\n                    scale=alt.Scale(domain=list(nd_type_colors_red.keys()),\n                                    range=list(nd_type_colors_red.values())),\n                    legend=alt.Legend(labelColor=\"white\", titleColor=\"white\")),\n    tooltip=['AverageTemperature', 'Frequency', 'Disaster Type']\n).properties(\n    width=850,\n    height=400,\n    title={\n        \"text\": \"Häufigkeit der Katastrophentypen im Zusammenhang mit der Temperatur\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\n\n\nnd_temp_scatter.configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel: - Präsentation einer Schlüsselfolie: Zusammenhang zwischen Temperatur und Naturkatastrophen. - Ein Scatterplot wird verwendet, um den Einfluss steigender Temperaturen auf die Häufigkeit von Naturkatastrophen klar zu veranschaulichen. - wir haben uns auch direkt für diese Folie entschieden, da wir uns damit direkt auf unsere Leitfrage wieder beziehen\n\n    \n        \n            20 bis 30 °C\n            Katastrophen\n        \n        \n        \n            Heiß\n            4397\n        \n    \n    \n        \n            10 bis 20 °C\n            Katastrophen\n        \n        \n        \n            Warm\n            1462\n        \n    \n    \n        \n            0 bis 10 °C\n            Katastrophen\n        \n        \n        \n            Normal\n            1033\n        \n    \n    \n        \n            -10 bis 0 °C\n            Katastrophen\n        \n        \n        \n            Kalt\n            99\n        \n    \n    \n        \n            -20 bis -10 °C\n            Katastrophen\n        \n        \n        \n            Sehr kalt\n            13\n        \n    \n\nZiel: - Hervorheben der variierenden Auswirkungen in unterschiedlichen Temperaturzonen. - Rückblickend auf eine der Haupterkenntnisse unserer Untersuchung reflektieren - soll zum Wiederaufruf unserer Leitfrage führen"
  },
  {
    "objectID": "Presentation.html#erklärung-zu-den-präsentierten-diagrammen",
    "href": "Presentation.html#erklärung-zu-den-präsentierten-diagrammen",
    "title": "5  Aufbau der Präsentation",
    "section": "5.2 Erklärung zu den präsentierten Diagrammen",
    "text": "5.2 Erklärung zu den präsentierten Diagrammen\n\n5.2.1 Durschnittstemperatur Verlauf\n\nimport pandas as pd\nimport altair as alt\nfrom vega_datasets import data\n\nalt.data_transformers.disable_max_rows()\n\ndf_nd = pd.read_csv('./data/InternationalDisaster_cleaned.csv')\ndf_nd_full = pd.read_csv('data/InternationalDisaster.csv')\ndf_nd_grouped = pd.read_csv('data/InternationalDisaster_grouped.csv')\ndf_temp = pd.read_csv('data/GlobalLandTemperatur_cleaned.csv')\ndf_temp_agg = pd.read_csv('data/GlobalLandTemperatur_aggregated.csv')\ndf_temp_nd_combined = pd.read_csv('data/df_temp_nd_combined.csv')\ncountries = alt.topo_feature(data.world_110m.url, 'countries')\n\nchart_title_color = \"#d6d6d6\"\nchart_line_color = \"#3A86FF\"\nchart_marker_color = \"#e00707\"\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\n\nnd_type_colors = {\n    'Drought': '#FFBC42',\n    'Earthquake': '#b55a1d',\n    'Epidemic': '#06D6A0',\n    'Extreme temperature': '#EF476F',\n    'Flood': '#3A86FF',\n    'Fog': '#118AB2',\n    'Impact': '#16225c',\n    'Infestation': '#2f9e29',\n    'Mass movement (dry)': '#78259c',\n    'Mass movement (wet)': '#512599',\n    'Storm': '#287fa1',\n    'Volcanic activity': '#ab4c29',\n    'Wildfire': '#b52222'\n}\n\nnd_type_colors_red = {\n    'Extreme temperature': nd_type_colors['Extreme temperature'],\n    'Storm': nd_type_colors['Storm'],\n    'Flood': nd_type_colors['Flood']\n}\n\n# | title: Iowa Electricity\nglobal_avg_temp = df_temp_agg.groupby(\n    'Year')['AverageTemperature'].mean().reset_index()\n\nglobal_avg_temp['Year'] = pd.to_datetime(\n    global_avg_temp['Year'], format='%Y')\nglobal_avg_temp['Year'] = global_avg_temp['Year'].dt.year\n\nglobal_avg_temp['AverageTemperature'] = global_avg_temp['AverageTemperature'].round(\n    2)\n\nglob_temp_chart = alt.Chart(global_avg_temp).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n        titleAnchor='start',\n        labelColor='white',\n    )),\n    y=alt.Y('AverageTemperature:Q', axis=alt.Axis(\n        title='Temperatur in °C',\n        titleAnchor='start',\n        labelColor='white',\n        titleColor='white',\n    ), scale=alt.Scale(\n        domain=[18, 21])),\n    tooltip=['Year', 'AverageTemperature']\n).properties(\n    width=950,\n    title={\n        \"text\": \"Globaler Temperaturverlauf (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\n\n\nglob_temp_regression = glob_temp_chart.transform_regression(\n    'Year', 'AverageTemperature', method='linear'\n).mark_line(color=chart_marker_color)\n\ntext_at_end = alt.Chart(pd.DataFrame({'end_position': [19.8]})).mark_text(\n    align='left',\n    baseline='middle',\n    dx=360,\n    dy=0,\n    color=chart_marker_color,\n    text='Anstieg: 0.8 °C',\n    fontWeight=800,\n    fontSize=14\n).encode(\n    y='end_position:Q'\n)\n\n\nglob_temp_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel:\n\nKlarer und eindeutiger Visualisierung des Temperaturanstiegs um 0,8 Grad\n\n\n\n5.2.2 Globale Naturkatastrophen\n\ndf_nd_filtered = df_nd_grouped[(df_nd_grouped['Frequency'] &gt; 0) & ((\n    df_nd_grouped['Disaster Type'] == 'Flood') | (df_nd_grouped['Disaster Type'] == 'Storm') | (df_nd_grouped['Disaster Type'] == 'Extreme temperatur'))]\nglobal_disaster_freq = df_nd_filtered.groupby(\n    ['Start Year'])['Frequency'].sum().reset_index()\n\nnd_line_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Start Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n        labelColor='white',\n    )),\n    y=alt.Y('Frequency:Q').axis(\n        title='Häufigkeit',\n        titleAnchor='start',\n        labelColor='white',\n        titleColor='white'\n    ),\n).properties(\n    width=950,\n    height=290,\n    title={\n        \"text\": \"Weltweite Häufigkeit pro Jahr: Stürmen, Extremtemperaturen und Überschwemmungen (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\nnd_line_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel:\n\ndurch den Linechart bietet sich ein gute Möglichkeit den Trend der zunehmenden Häufigkeit darzustellen.\n\n\nnd_type_filter_flood = alt.FieldEqualPredicate(\n    field='Disaster Type', equal='Flood')\n\nglobal_disaster_freq = df_nd_grouped.groupby(['Start Year', 'Disaster Type'])[\n    'Frequency'].sum().reset_index()\n\nnd_flood_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Start Year:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        labelColor=\"white\",\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n    )),\n    y=alt.Y('Frequency:Q').axis(\n        title='Häufigkeit',\n        titleAnchor='start',\n        labelColor=\"white\",\n        titleColor=\"white\"\n    ),\n    color=alt.Color('Disaster Type:N',\n                    legend=None),\n    tooltip=['Start Year', 'Frequency', 'Disaster Type']\n).properties(\n    width=950,\n    height=250,\n    title={\n        \"text\": \"Globale Häufigkeiten: Überschwemmungen (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n).transform_filter(\n    nd_type_filter_flood\n)\n\nnd_flood_chart_text_point_2006 = alt.Chart(global_disaster_freq[(global_disaster_freq['Start Year'] == 2006) & (global_disaster_freq['Disaster Type'] == 'Flood')]).mark_point(color=chart_marker_color, size=300, strokeWidth=3).encode(\n    x='Start Year:O',\n    y='Frequency:Q',\n    text=alt.Text('Start Year:N', format='d')\n)\n\nnd_flood_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\n\n(nd_flood_chart + nd_flood_chart_text_point_2006).configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel:\n\nder Linechart veranschaulicht sehr gut, wie Häufigkeit in den letzten 3 Jahrzehneten gestiegen ist, deswegen haben wir uns hier auch für ein Linechart entschieden\nder Rotepunkt ist leicht zu erkennen und zeigt dem Zuschauer direkt auf welche Sequenz wir uns gerade beziehen\n\n\nnd_type_filter_storm = alt.FieldEqualPredicate(\n    field='Disaster Type', equal='Storm')\n\nglobal_disaster_freq = df_nd_grouped.groupby(['Start Year', 'Disaster Type'])[\n    'Frequency'].sum().reset_index()\n\nnd_storm_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Start Year:O', axis=alt.Axis(\n        title='',\n        labelColor=\"white\",\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n    )),\n    y=alt.Y('Frequency:Q').axis(\n        title='Häufigkeit',\n        labelColor=\"white\",\n        titleAnchor='start',\n        titleColor=\"white\"\n    ),\n    color=alt.Color('Disaster Type:N',\n                    legend=None),\n    tooltip=['Start Year', 'Frequency', 'Disaster Type']\n).properties(\n    width=950,\n    height=250,\n    title={\n        \"text\": \"Globale Häufigkeiten: Stürme (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n).transform_filter(\n    nd_type_filter_storm\n)\n\nnd_storm_chart_text_point_1990 = alt.Chart(global_disaster_freq[(global_disaster_freq['Start Year'] == 1990) & (global_disaster_freq['Disaster Type'] == 'Storm')]).mark_point(color=chart_marker_color, size=300, strokeWidth=3).encode(\n    x='Start Year:O',\n    y='Frequency:Q',\n    text=alt.Text('Start Year:N', format='d')\n)\n\nnd_storm_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n(nd_storm_chart + nd_storm_chart_text_point_1990).configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel:\n\nDer Linechart illustriertauch hier überzeugend den Anstieg der Häufigkeit in den letzten drei Jahrzehnten. Aus diesem Grund haben wir uns für die Verwendung eines Linecharts entschieden.\nDer rote Punkt ist gut erkennbar und zeigt dem Zuschauer sofort, auf welche Sequenz wir uns aktuell beziehen.\n\n\nnd_type_filter_extr_temp = alt.FieldEqualPredicate(\n    field='Disaster Type', equal='Extreme temperature')\n\nglobal_disaster_freq = df_nd_grouped.groupby(['Start Year', 'Disaster Type'])[\n    'Frequency'].sum().reset_index()\n\nnd_extr_temp_chart = alt.Chart(global_disaster_freq).mark_line(stroke=chart_line_color).encode(\n    x=alt.X('Start Year:O', axis=alt.Axis(\n        title='',\n        labelColor=\"white\",\n        labelAngle=0,\n        values=list(range(global_avg_temp['Year'].min(\n        ), global_avg_temp['Year'].max() + 1, 5)),\n    )),\n    y=alt.Y('Frequency:Q').axis(\n        title='Häufigkeit',\n        labelColor=\"white\",\n        titleAnchor='start',\n        titleColor=\"white\"\n    ),\n    color=alt.Color('Disaster Type:N',\n                    legend=None),\n    tooltip=['Start Year', 'Frequency', 'Disaster Type']\n).properties(\n    width=950,\n    height=250,\n    title={\n        \"text\": \"Globale Häufigkeiten: Extremtemperaturen (1920 – 2013)\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n).transform_filter(\n    nd_type_filter_extr_temp\n)\n\nnd_extr_temp_chart_text_point_2012 = alt.Chart(global_disaster_freq[(global_disaster_freq['Start Year'] == 2012) & (global_disaster_freq['Disaster Type'] == 'Extreme temperature')]).mark_point(color='red', size=300, strokeWidth=3).encode(\n    x='Start Year:O',\n    y='Frequency:Q',\n    text=alt.Text('Start Year:N', format='d')\n)\n\nnd_extr_temp_chart.configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\n\n(nd_extr_temp_chart +\n nd_extr_temp_chart_text_point_2012).configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel:\n\nauch hier ist wieder ein Linechart zu erkennen, damit klar der Anstieg Häufigkeit zu erkennen ist\n\n\nglobal_disaster_freq = df_temp_nd_combined.groupby(['AverageTemperature', 'Disaster Type'])[\n    'Frequency'].sum().reset_index()\n\nglobal_disaster_freq_filtered = global_disaster_freq[(global_disaster_freq['Disaster Type'] == 'Flood') | (\n    global_disaster_freq['Disaster Type'] == 'Storm') | (global_disaster_freq['Disaster Type'] == 'Extreme temperature')]\n\nnd_temp_scatter = alt.Chart(global_disaster_freq_filtered).mark_circle().encode(\n    x=alt.X('AverageTemperature:O', title='Durchschnittstemperatur in °C ',\n            axis=alt.Axis(format=\".3f\",\n                          titleAnchor='start',\n                          titleColor=\"white\",\n                          labelColor=\"white\"\n                          )),\n    y=alt.Y('Frequency:Q', axis=alt.Axis(\n        title='Häufigkeit',\n        titleAnchor='start',\n        titleColor=\"white\",\n        labelColor=\"white\"\n    )),\n    color=alt.Color('Disaster Type',\n                    title='Katastrophentyp',\n                    scale=alt.Scale(domain=list(nd_type_colors_red.keys()),\n                                    range=list(nd_type_colors_red.values())),\n                    legend=alt.Legend(labelColor=\"white\", titleColor=\"white\")),\n    tooltip=['AverageTemperature', 'Frequency', 'Disaster Type']\n).properties(\n    width=850,\n    height=400,\n    title={\n        \"text\": \"Häufigkeit der Katastrophentypen im Zusammenhang mit der Temperatur\",\n        \"fontSize\": 18,\n        \"fontWeight\": 300,\n        \"anchor\": 'start',\n        \"color\": chart_title_color,\n    },\n)\n\n\nnd_temp_scatter.configure(background=\"rgba(0, 0, 0, 0)\")\n\n\n\n\n\n\n\nZiel:\n\nPräsentation einer Schlüsselfolie: Zusammenhang zwischen Temperatur und Naturkatastrophen.\nEin Scatterplot wird verwendet, um den Einfluss steigender Temperaturen auf die Häufigkeit von Naturkatastrophen klar zu veranschaulichen.\nwir haben uns auch direkt für diese Folie entschieden, da wir uns damit direkt auf unsere Leitfrage wieder beziehen\n\n\n    \n        \n            20 bis 30 °C\n            Katastrophen\n        \n        \n        \n            Heiß\n            4397\n        \n    \n    \n        \n            10 bis 20 °C\n            Katastrophen\n        \n        \n        \n            Warm\n            1462\n        \n    \n    \n        \n            0 bis 10 °C\n            Katastrophen\n        \n        \n        \n            Normal\n            1033\n        \n    \n    \n        \n            -10 bis 0 °C\n            Katastrophen\n        \n        \n        \n            Kalt\n            99\n        \n    \n    \n        \n            -20 bis -10 °C\n            Katastrophen\n        \n        \n        \n            Sehr kalt\n            13\n        \n    \n\nZiel:\n\nHervorheben der variierenden Auswirkungen in unterschiedlichen Temperaturzonen.\nRückblickend auf eine der Haupterkenntnisse unserer Untersuchung reflektieren\nsoll zum Wiederaufruf unserer Leitfrage führen"
  }
]